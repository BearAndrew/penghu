{"version":3,"file":"cci-ng-chart-tool.mjs","sources":["../../../projects/cci-ng-chart-tool/src/lib/function/common.function.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/root-svg.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/root-chart.ts","../../../projects/cci-ng-chart-tool/src/lib/enum/enum.ts","../../../projects/cci-ng-chart-tool/src/lib/config/color.config.ts","../../../projects/cci-ng-chart-tool/src/lib/function/color.function.ts","../../../projects/cci-ng-chart-tool/src/lib/enum/color.enum.ts","../../../projects/cci-ng-chart-tool/src/lib/config/font.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/grid/grid.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/basic-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/grid/grid-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/gridline/gridline.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/gridline/gridline-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/interface/position.interface.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/tooltip/tooltip.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/tooltip/tooltip-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/tooltip/position-strategy.function.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/tooltip/basic-tooltip-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/dot-factory/dot.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/dot-factory/dot-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/line-factory/line.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/line-factory/line-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/line-chart/line-chart.ts","../../../projects/cci-ng-chart-tool/src/lib/enum/curve.enum.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/area-factory/area.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/line/area-factory/area-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/area-chart/area-chart.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/bar/bar-factory/bar.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/grid/bar/bar-factory/bar-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/bar-chart/bar-chart.ts","../../../projects/cci-ng-chart-tool/src/lib/chart/bar-line-chart/bar-line-chart.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/legend/legend.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/legend/legend-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/radial/radial/radial.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/radial/radial/radial-state.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/radial/radial/radial-factory.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/radial/pie/pie.config.ts","../../../projects/cci-ng-chart-tool/src/lib/factory/radial/pie/pie-factory.ts","../../../projects/cci-ng-chart-tool/src/public-api.ts","../../../projects/cci-ng-chart-tool/src/cci-ng-chart-tool.ts"],"sourcesContent":["import * as d3 from 'd3';\n\n/** 取得字串長寬 */\nexport function getTextRect(\n  text: string,\n  fontFamily: string = '',\n  fontSize: string = '16',\n  fontWeight: string = '400'\n) {\n  const tempSvg = d3.select('body').append('svg');\n\n  const tempSpan = tempSvg\n    .append('text')\n    .attr('visibility', 'hidden')\n    .attr('position', 'absolute')\n    .attr('left', 0)\n    .attr('font-family', fontFamily)\n    .attr('font-size', fontSize)\n    .attr('font-weight', fontWeight)\n    .text(text);\n\n  const rect = tempSpan.node()?.getBoundingClientRect() || new DOMRect();\n\n  tempSvg.remove();\n\n  return rect;\n}\n\n/** 深拷貝 */\nexport function deepCopy(obj: any) {\n  return JSON.parse(JSON.stringify(obj));\n}\n\n/** 生成隨機小寫英文字串，預設 8 碼 */\nexport function getRandomId(length: number = 8): string {\n  let id = '';\n  const randomChar = 'abcdefghijklmnopqrstuvwxyz';\n  for (let i = 0; i < length; i++) {\n    const randomBuffer: Uint32Array = new Uint32Array(1);\n    window.crypto.getRandomValues(randomBuffer);\n    id += randomChar.charAt(Math.floor((randomBuffer[0] / (0xffffffff + 1)) * randomChar.length));\n  }\n\n  return id;\n}\n\n/** 限制文本長度並添加 ...，使中英文實際顯示寬度接近 */\n// export function truncateText(text: string, maxLength: number = 20) {\n//   let weightedLength = 0;\n//   let truncated = '';\n//   // 判斷字符是否為中文\n//   function isChinese(char: string) {\n//     return /[\\u4e00-\\u9fff]/.test(char);\n//   }\n\n//   for (let i = 0; i < text.length; i++) {\n//     const char = text[i];\n//     const charLength = isChinese(char) ? 2 : 1;\n\n//     // 如果超過最大長度 - 4 (扣除...長度)，停止截取\n//     if (weightedLength + charLength > maxLength - 4) {\n//       truncated += '...';\n//       break;\n//     }\n\n//     truncated += char;\n//     weightedLength += charLength;\n//   }\n\n//   return truncated;\n// }\n\nexport function truncateText(textElement: d3.Selection<any, unknown, null, undefined>, maxWidth: number): void {\n  let text = textElement.text();\n\n  // 如果文本寬度超過 maxWidth，進行截斷\n  while (textElement.node()?.getComputedTextLength()! > maxWidth && text.length > 0) {\n    text = text.slice(0, -1); // 逐字縮短文本\n    textElement.text(text + '...'); // 在文本末尾加上 \"...\"\n  }\n}\n\n/** 生成 text 標籤\n *\n * 預設數值:\n * - dominant-baseline: middle;\n * - pointer-events: none;\n * - user-select: none; */\nexport function createText(\n  parent: d3.Selection<any, any, any, any>,\n  customAttrs: (text: d3.Selection<any, any, any, any>) => void\n): d3.Selection<any, unknown, any, any> {\n  return parent\n    .append('text')\n    .attr('dominant-baseline', 'middle')\n    .style('pointer-events', 'none')\n    .style('user-select', 'none')\n    .call(customAttrs);\n}\n","import * as d3 from 'd3';\nimport { getRandomId } from '../function/common.function';\nimport { Size } from '../interface/common.interface';\n\n/**\n * 基礎svg\n */\nexport class RootSvg {\n  svg: d3.Selection<SVGSVGElement, unknown, HTMLElement, any>;\n  id: string = getRandomId();\n  size: Size = { width: 500, height: 500 };\n  chartElement: HTMLElement;\n  private isFirst: boolean = true;\n\n  constructor(selector: string) {\n    this.chartElement = document.querySelector(selector) as HTMLElement;\n    const rect = this.chartElement?.getBoundingClientRect() || {\n      width: 500,\n      height: 500\n    };\n    this.size = { width: rect?.width, height: rect?.height };\n    this.svg = d3.select(selector).append('svg').attr('id', this.id).attr('width', this.size.width).attr('height', this.size.height);\n\n    if (!this.chartElement) {\n      console.error(`找不到${selector}`);\n      return;\n    }\n\n    // flex grow 的時候加上 min-height:0 min-width:0，防止resizeObserver無限觸發\n    if (this.chartElement.style.flexGrow) {\n      this.chartElement.style.minHeight = '0';\n      this.chartElement.style.minWidth = '0';\n    }\n    const resizeObserver = new ResizeObserver(entries => {\n      if (this.isFirst) {\n        this.isFirst = false;\n        return;\n      }\n      for (let entry of entries) {\n        this.size = {\n          width: entry.contentRect.width,\n          height: entry.contentRect.height\n        };\n        setTimeout(() => this.draw(false), 0);\n      }\n    });\n    resizeObserver.observe(this.chartElement);\n  }\n\n  /** 設定長寬 */\n  setSize(size: Size) {\n    this.size = size;\n  }\n\n\n  protected draw(useAnimation: boolean) {\n    this.svg.attr('width', this.size.width).attr('height', this.size.height);\n  }\n\n}\n","import * as d3 from 'd3';\nimport { getRandomId } from '../function/common.function';\nimport { Size } from '../interface/common.interface';\nimport { RootSvg } from './root-svg';\n\n/**\n * 基礎圖表 包含圖表共用資訊\n */\nexport abstract class RootChart extends RootSvg {\n\n  constructor(selector: string) {\n    super(selector);\n  }\n\n\n  protected abstract setFactory(): void;\n\n  override draw(useAnimation: boolean) {\n    this.svg.attr('width', this.size.width).attr('height', this.size.height);\n    this.drawChart(useAnimation);\n  }\n\n  /** 繪製圖表 */\n  abstract drawChart(useAnimation?: boolean): void;\n}\n","export enum D3Accessor {\n  attr = 'attr',\n  style = 'style',\n}\n\nexport enum Direction {\n  vertical = 'vertical',\n  horizontal = 'horizontal'\n}\n","/**\n * @param color string\n * @param opacity number\n */\nexport interface Color {\n  color: string;\n  opacity: number;\n}\n\nexport enum DefaultDataColor {\n  Sage = '#9EDBB6',\n  PastelOrange = '#FFCC83',\n  SkyBlue = '#8EC7FF',\n  SalmonPink = '#F99798',\n  Lavender = '#C0A8F4',\n  CottonCandyPink = '#FFBDF8',\n  MintGreen = '#A8F4AE',\n  PaleYellow = '#FFE68E',\n  CornflowerBlue = '#798ED6',\n  LightCyan = '#83F6FF',\n}\n\n/** 一筆 Color[] 代表一個資料集的顏色，若 Color[] 陣列長度 > 1，則代表為漸層顏色 */\nexport const DefaultDataColorArray: Color[][] = [\n  [{ color: DefaultDataColor.Sage, opacity: 1 }],\n  [{ color: DefaultDataColor.PastelOrange, opacity: 1 }],\n  [{ color: DefaultDataColor.SkyBlue, opacity: 1 }],\n  [{ color: DefaultDataColor.SalmonPink, opacity: 1 }],\n  [{ color: DefaultDataColor.Lavender, opacity: 1 }],\n  [{ color: DefaultDataColor.CottonCandyPink, opacity: 1 }],\n  [{ color: DefaultDataColor.MintGreen, opacity: 1 }],\n  [{ color: DefaultDataColor.PaleYellow, opacity: 1 }],\n  [{ color: DefaultDataColor.CornflowerBlue, opacity: 1 }],\n  [{ color: DefaultDataColor.LightCyan, opacity: 1 }],\n];\n","import { Color, DefaultDataColorArray } from '../config/color.config';\nimport { Direction } from '../enum/enum';\nimport { DataSet } from '../interface/common.interface';\n\n/** 回傳 d3.selection fill 中需要的顏色 */\nexport function getSelectionColor(\n  selection: d3.Selection<any, any, any, any>,\n  colors: Color[],\n  elementId: string,\n  elementIndex: number | string,\n  direction: Direction = Direction.horizontal\n): string {\n  let returnColor = '';\n  if (colors.length == 1) {\n    returnColor =\n      convertColourToColorType(colors[0].color).color +\n      numberToHex(colors[0].opacity);\n  } else {\n    // 漸層色定義\n    selection.selectAll(`defs.linearGradient[id^=\"${elementId}_\"]`).remove();\n    let lineGradient = selection\n      .select(`defs.linearGradient#${elementId}_${elementIndex}`)\n      .select(`linearGradient#gradient_${elementId}_${elementIndex}`) as d3.Selection<\n      any,\n      any,\n      any,\n      any\n    >;\n    if (lineGradient.empty()) {\n      lineGradient = selection\n        .append('defs')\n        .attr('class', 'linearGradient')\n        .attr('id', `${elementId}_${elementIndex}`)\n        .datum(colors)\n        .append('linearGradient');\n    }\n\n    lineGradient\n      .attr('id', `gradient_${elementId}_${elementIndex}`)\n      .attr('x1', '0%')\n      .attr('x2', direction == Direction.horizontal ? '100%' : '0%')\n      .attr('y1', '0%')\n      .attr('y2', direction == Direction.horizontal ? '0%' : '100%');\n\n    for (let i = 0; i < colors.length; i++) {\n      lineGradient\n        .append('stop')\n        .attr('offset', (100 / (colors.length - 1)) * i + '%')\n        .style('stop-color', colors[i].color)\n        .style('stop-opacity', colors[i].opacity);\n    }\n    returnColor = `url(#gradient_${elementId}_${elementIndex})`;\n  }\n\n  return returnColor;\n}\n\n/** 回傳 css color 中需要的顏色 */\nexport function getCssColor(\n  colors: Color[],\n  direction: Direction = Direction.horizontal\n) {\n  let returnColor = '';\n\n  if (colors.length == 1) {\n    returnColor =\n      convertColourToColorType(colors[0].color).color +\n      numberToHex(colors[0].opacity);\n  } else {\n    returnColor = `linear-gradient(${\n      direction == Direction.horizontal ? '90' : '180'\n    }deg,${colors.map(\n      (item) =>\n        `${\n          convertColourToColorType(item.color).color + numberToHex(item.opacity)\n        }`\n    )})`;\n  }\n  return returnColor;\n}\n\n/** 從 DataSet [ ] 中將 colors:string [ ] 轉換成 Color [ ] [ ] */\nexport function getColorTypeArray(DataSetWithDataArrays: DataSet[]): Color[][] {\n  let colorTypeArray = [...DefaultDataColorArray];\n  const colorArray = DataSetWithDataArrays.map((data) => {\n    if (data.colors) {\n      return data.colors.map((item) => {\n        const color: Color = convertColourToColorType(item);\n        return color;\n      });\n    } else {\n      return [];\n    }\n  });\n\n  for (let i = 0; i < colorArray.length; i++) {\n    colorTypeArray[i] =\n      colorArray[i].length < 1 ? DefaultDataColorArray[i] : colorArray[i];\n  }\n\n  return colorTypeArray;\n}\n\nfunction numberToHex(num: number): string {\n  let hex = Math.round(num * 255).toString(16);\n\n  if (hex.length == 1) {\n    hex = '0' + hex;\n  }\n\n  return hex;\n}\n\nexport function convertColourToColorType(colour: string): Color {\n  const colorString = colourNameToHex(colour);\n  return colourToColorType(colorString);\n}\n\nfunction colourNameToHex(colour: string): string {\n  const colours: any = {\n    aliceblue: '#f0f8ff',\n    antiquewhite: '#faebd7',\n    aqua: '#00ffff',\n    aquamarine: '#7fffd4',\n    azure: '#f0ffff',\n    beige: '#f5f5dc',\n    bisque: '#ffe4c4',\n    black: '#000000',\n    blanchedalmond: '#ffebcd',\n    blue: '#0000ff',\n    blueviolet: '#8a2be2',\n    brown: '#a52a2a',\n    burlywood: '#deb887',\n    cadetblue: '#5f9ea0',\n    chartreuse: '#7fff00',\n    chocolate: '#d2691e',\n    coral: '#ff7f50',\n    cornflowerblue: '#6495ed',\n    cornsilk: '#fff8dc',\n    crimson: '#dc143c',\n    cyan: '#00ffff',\n    darkblue: '#00008b',\n    darkcyan: '#008b8b',\n    darkgoldenrod: '#b8860b',\n    darkgray: '#a9a9a9',\n    darkgreen: '#006400',\n    darkkhaki: '#bdb76b',\n    darkmagenta: '#8b008b',\n    darkolivegreen: '#556b2f',\n    darkorange: '#ff8c00',\n    darkorchid: '#9932cc',\n    darkred: '#8b0000',\n    darksalmon: '#e9967a',\n    darkseagreen: '#8fbc8f',\n    darkslateblue: '#483d8b',\n    darkslategray: '#2f4f4f',\n    darkturquoise: '#00ced1',\n    darkviolet: '#9400d3',\n    deeppink: '#ff1493',\n    deepskyblue: '#00bfff',\n    dimgray: '#696969',\n    dodgerblue: '#1e90ff',\n    firebrick: '#b22222',\n    floralwhite: '#fffaf0',\n    forestgreen: '#228b22',\n    fuchsia: '#ff00ff',\n    gainsboro: '#dcdcdc',\n    ghostwhite: '#f8f8ff',\n    gold: '#ffd700',\n    goldenrod: '#daa520',\n    gray: '#808080',\n    green: '#008000',\n    greenyellow: '#adff2f',\n    honeydew: '#f0fff0',\n    hotpink: '#ff69b4',\n    indianred: '#cd5c5c',\n    indigo: '#4b0082',\n    ivory: '#fffff0',\n    khaki: '#f0e68c',\n    lavender: '#e6e6fa',\n    lavenderblush: '#fff0f5',\n    lawngreen: '#7cfc00',\n    lemonchiffon: '#fffacd',\n    lightblue: '#add8e6',\n    lightcoral: '#f08080',\n    lightcyan: '#e0ffff',\n    lightgoldenrodyellow: '#fafad2',\n    lightgrey: '#d3d3d3',\n    lightgreen: '#90ee90',\n    lightpink: '#ffb6c1',\n    lightsalmon: '#ffa07a',\n    lightseagreen: '#20b2aa',\n    lightskyblue: '#87cefa',\n    lightslategray: '#778899',\n    lightsteelblue: '#b0c4de',\n    lightyellow: '#ffffe0',\n    lime: '#00ff00',\n    limegreen: '#32cd32',\n    linen: '#faf0e6',\n    magenta: '#ff00ff',\n    maroon: '#800000',\n    mediumaquamarine: '#66cdaa',\n    mediumblue: '#0000cd',\n    mediumorchid: '#ba55d3',\n    mediumpurple: '#9370d8',\n    mediumseagreen: '#3cb371',\n    mediumslateblue: '#7b68ee',\n    mediumspringgreen: '#00fa9a',\n    mediumturquoise: '#48d1cc',\n    mediumvioletred: '#c71585',\n    midnightblue: '#191970',\n    mintcream: '#f5fffa',\n    mistyrose: '#ffe4e1',\n    moccasin: '#ffe4b5',\n    navajowhite: '#ffdead',\n    navy: '#000080',\n    oldlace: '#fdf5e6',\n    olive: '#808000',\n    olivedrab: '#6b8e23',\n    orange: '#ffa500',\n    orangered: '#ff4500',\n    orchid: '#da70d6',\n    palegoldenrod: '#eee8aa',\n    palegreen: '#98fb98',\n    paleturquoise: '#afeeee',\n    palevioletred: '#d87093',\n    papayawhip: '#ffefd5',\n    peachpuff: '#ffdab9',\n    peru: '#cd853f',\n    pink: '#ffc0cb',\n    plum: '#dda0dd',\n    powderblue: '#b0e0e6',\n    purple: '#800080',\n    rebeccapurple: '#663399',\n    red: '#ff0000',\n    rosybrown: '#bc8f8f',\n    royalblue: '#4169e1',\n    saddlebrown: '#8b4513',\n    salmon: '#fa8072',\n    sandybrown: '#f4a460',\n    seagreen: '#2e8b57',\n    seashell: '#fff5ee',\n    sienna: '#a0522d',\n    silver: '#c0c0c0',\n    skyblue: '#87ceeb',\n    slateblue: '#6a5acd',\n    slategray: '#708090',\n    snow: '#fffafa',\n    springgreen: '#00ff7f',\n    steelblue: '#4682b4',\n    tan: '#d2b48c',\n    teal: '#008080',\n    thistle: '#d8bfd8',\n    tomato: '#ff6347',\n    turquoise: '#40e0d0',\n    violet: '#ee82ee',\n    wheat: '#f5deb3',\n    white: '#ffffff',\n    whitesmoke: '#f5f5f5',\n    yellow: '#ffff00',\n    yellowgreen: '#9acd32',\n  };\n\n  if (typeof colours[colour.toLowerCase()] != 'undefined')\n    return colours[colour.toLowerCase()];\n\n  return colour;\n}\n\nfunction colourToColorType(colour: string): Color {\n  if (colour.includes('rgb')) {\n    let rgb = colour.split('(')[1].split(')');\n    let opacity = 1;\n    if (colour.includes('rgba')) {\n      const rgba = colour.split('(')[1].split(')');\n      rgb = rgba.slice(0, -1);\n      opacity = Number(rgba[rgba.length - 1]);\n    }\n\n    const hex = rgb.map((x) => {\n      x = parseInt(x).toString(16);\n      return x.length == 1 ? '0' + x : x;\n    });\n\n    return {\n      color: '#' + hex.join(''),\n      opacity: opacity,\n    };\n  } else if (colour.includes('#')) {\n    let color = '';\n    let opacity = 1;\n    switch (colour.length) {\n      case 4:\n        color = `#${colour[1]}${colour[1]}${colour[2]}${colour[2]}${colour[3]}${colour[3]}`;\n        break;\n      case 7:\n        color = colour;\n        break;\n      case 5:\n        color = colour.slice(0, -1);\n        opacity = parseInt(colour.slice(-1), 16) / 15;\n        break;\n      case 9:\n        color = colour.slice(0, -2);\n        opacity = parseInt(colour.slice(-2), 16) / 255;\n    }\n    return {\n      color: color,\n      opacity: opacity,\n    };\n  } else {\n    return {\n      color: colour,\n      opacity: 1,\n    };\n  }\n}\n","export enum ColorType {\n  Grid = \"#EEEEEE\",\n  Axis = \"#757575\",\n  AxisLabel = \"#757575\",\n  Hint = \"#FFFFFF\",\n  HintBg = \"#686868\",\n  Title = \"Black\",\n  SubTitle = \"#757575\",\n}\n","import { ColorType } from '../enum/color.enum';\n\nexport enum FontFamilyType {\n  Common = '\"PingFang TC\",\"Segoe UI\", \"Roboto\", \"微軟正黑體\", \"sans-serif\"',\n}\n\nexport type FontWeightType =\n  | '100'\n  | '200'\n  | '300'\n  | '400'\n  | '500'\n  | '600'\n  | '700'\n  | '800'\n  | '900';\n\n\n/**\n * 文字相關設定\n * @param font-size string\n * @param font-family string\n * @param font-weight '100' ~ '900'\n * @param color string\n */\nexport interface FontConfig {\n  'font-size': string;\n  'font-family': string;\n  'font-weight': FontWeightType;\n  color: string;\n}\n\n/** 標籤文字預設樣式 */\nexport const DefaultLabel: FontConfig = {\n  'font-size': '12px',\n  'font-family': FontFamilyType.Common,\n  'font-weight': '400',\n  color: ColorType.AxisLabel,\n};\n\n/** 軸線文字預設樣式 */\nexport const DefaultAxisLabel: FontConfig = {\n  'font-size': '14px',\n  'font-family': FontFamilyType.Common,\n  'font-weight': '400',\n  color: ColorType.AxisLabel,\n};\n\n","import { DefaultAxisLabel, FontConfig } from '../../../config/font.config';\nimport { Direction } from '../../../enum/enum';\nimport { deepCopy } from '../../../function/common.function';\nimport { LayoutPosition } from '../../../interface/position.interface';\n\n/** key軸格線畫的位置\n * - `center` 格線畫在刻度中心\n * - `centerPadding` 格線畫在刻度中心，且兩邊多空出一格寬度\n * - `between` 格線畫在刻度兩邊\n */\nexport enum KeyGridlineAlignment {\n  center = 0,\n  centerPadding = 1,\n  between = 2\n}\n\nexport interface GridConfig {\n  /** X軸標籤文字樣式設定 */\n  xlabelFontConfig: FontConfig;\n  /** Y軸標籤文字樣式設定 */\n  ylabelFontConfig: FontConfig;\n  /** key 軸標籤文字後方單位字串 */\n  keyUnit: string;\n  /** value 軸標籤文字後方單位字串 */\n  valueUnit: string;\n  /** 圖表方向，vertical 為 X軸顯示key值，Y軸顯示value值 */\n  direction: Direction;\n  /** key軸格線繪製位置\n   *  - `KeyGridlineAlignment.center` 格線畫在刻度中心\n   *  - `KeyGridlineAlignment.centerPadding` 格線畫在刻度中心，且兩邊多空出一格寬度\n   *  - `KeyGridlineAlignment.between` 格線畫在刻度兩邊\n   */\n  keyGridlineAlignment: KeyGridlineAlignment;\n  /** 格線數值等分數量，ex. 0~100 五等分，一個 step 為20 */\n  stepsCount: number;\n  /** key軸頻帶寬度，介於 0 ~ 1 */\n  bandwidth: number;\n  /** 是否啟用游標事件，啟用後才能監聽 Pointerover Pointerout Click 事件與繪製效果 */\n  isUsePointerEvent: boolean;\n  /** hover 時顯示當前 hover 的 key 軸區間的顏色 */\n  hoverColor: string;\n  /** hover 時顯示當前 hover 的 key 軸區間的寬度 */\n  hoverStrokeWidth: number;\n  /** 設定要顯示的點擊區間索引值 */\n  activeIndex: number;\n  /** 點擊後顯示當前點擊的 key 軸區間的顏色 */\n  activeColor: string;\n  /** 點擊後更改當前點擊的 key 軸標籤文字的顏色 */\n  activeTextColor: string;\n  /** 是否顯示當前 key 軸上的所有數值點 */\n  showHoverPoint: boolean;\n  /** 是否顯示 hover 區間 */\n  showHoverArea: boolean;\n  /** 是否顯示 點擊區間 */\n  showActiveArea: boolean;\n  /** 自行設定的最小值，index 0 為左軸，index 1 為右軸 */\n  settingMin: [number, number];\n  /** 自行設定的最大值，index 0 為左軸，index 1 為右軸 */\n  settingMax: [number, number];\n  /** 格線與標籤的間距 */\n  gridGap: LayoutPosition;\n  /** 設定顯示軸線標籤，(影響格線內推空間) */\n  isShowAxisLabel: boolean;\n}\n\nexport const DefaultGridConfig: GridConfig = {\n  xlabelFontConfig: deepCopy(DefaultAxisLabel),\n  ylabelFontConfig: deepCopy(DefaultAxisLabel),\n  keyUnit: '',\n  valueUnit: '',\n  direction: Direction.vertical,\n  keyGridlineAlignment: KeyGridlineAlignment.centerPadding,\n  stepsCount: 5,\n  bandwidth: 1,\n  isUsePointerEvent: false,\n  hoverColor: '#3333',\n  hoverStrokeWidth: -1,\n  activeIndex: -1,\n  activeColor: '#3333',\n  activeTextColor: '#3333',\n  showHoverPoint: false,\n  showHoverArea: true,\n  showActiveArea: true,\n  settingMin: [0, 0],\n  settingMax: [0, 0],\n  gridGap: { top: 0, bottom: 0, left: 0, right: 0 },\n  isShowAxisLabel: true\n};\n","import { D3Accessor } from \"../enum/enum\";\nimport { getRandomId } from \"../function/common.function\";\nimport { D3Operator } from \"../interface/common.interface\";\n\n/**\n * 基礎組件工廠\n */\nexport abstract class BasicFactory<T> {\n  protected isFirstUpdate = true;\n  protected d3Operators!: D3Operator[];\n  protected factoryId: string = getRandomId();\n\n  setD3Operator(d3Operators: D3Operator[]): T {\n    this.d3Operators = d3Operators;\n    return this as unknown as T;\n  }\n\n  /** 取得組件 id */\n  getId(): string {\n    return this.factoryId;\n  }\n\n  protected ExtendD3(d3: any) {\n    if (this.d3Operators) {\n      for (const configItem of this.d3Operators) {\n        switch (configItem[0]) {\n          case D3Accessor.attr:\n            d3.attr(configItem[1], configItem[2]);\n            break;\n          case D3Accessor.style:\n            d3.style(configItem[1], configItem[2]);\n            break;\n        }\n      }\n    }\n  }\n\n  /** 設定組件中所有可以被設定的值 */\n  abstract setConfig(config: Partial<any>): T;\n\n  /** 取得組件中所有可以被設定的值 */\n  abstract getConfig(): Record<string, any>;\n\n  /** 取得組件選擇器 */\n  abstract getSelector(): string;\n\n  /** 繪製 */\n  abstract draw(useAnimation: boolean): void;\n\n  /** 清除繪製的內容 */\n  abstract clear(useAnimation: boolean): void;\n}\n","import * as d3 from 'd3';\nimport { RootSvg } from './../../../chart/root-svg';\nimport { deepCopy, getRandomId, getTextRect } from '../../../function/common.function';\nimport { FontConfig } from '../../../config/font.config';\nimport {\n  DataSetWithDataArray,\n  MinMaxValue,\n  Size,\n} from '../../../interface/common.interface';\nimport { GridState } from './grid.state';\nimport { Direction } from '../../../enum/enum';\nimport { LayoutPosition } from '../../../interface/position.interface';\nimport { Color } from '../../../config/color.config';\nimport { getColorTypeArray } from '../../../function/color.function';\nimport { Observable, Subject } from 'rxjs';\nimport { ColorType } from '../../../enum/color.enum';\nimport { DefaultGridConfig, GridConfig, KeyGridlineAlignment } from './grid.config';\nimport { BasicFactory } from '../../basic-factory';\n\n/** 格線的游標事件，onPointerover 與 onClick 回傳的型別 */\nexport interface GridPointerEvent {\n  /** key 軸索引值 */\n  keyIndex: number;\n  /** 事件回傳的數據 */\n  data: DataSetWithDataArray[];\n  /** 離游標最近的數據索引值 */\n  nearestDataIndex: number;\n  /** 游標事件 */\n  event: PointerEvent;\n  /** hover 或 click 事件的 HTMLElement */\n  element: HTMLElement;\n}\n\n/** 格線定位組件，格線型圖表必須使用 */\nexport class GridFactory extends BasicFactory<GridFactory> {\n  private gridGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private gridState!: GridState;\n  private gridConfig: GridConfig = deepCopy(DefaultGridConfig);\n  private dataSetWithDataArrays: DataSetWithDataArray[] = [];\n\n  // gridState 所有變數\n  private x: d3.ScaleLinear<number, number, never> | d3.ScaleBand<string> =\n    getScaleLinear(0, 0, 0, 0);\n  private xTop: d3.ScaleLinear<number, number, never> | d3.ScaleBand<string> =\n    getScaleLinear(0, 0, 0, 0);\n  private xGridlineBottom:\n    | d3.ScaleLinear<number, number, never>\n    | d3.ScaleBand<string> = getScaleLinear(0, 0, 0, 0);\n  private xGridlineTop:\n    | d3.ScaleLinear<number, number, never>\n    | d3.ScaleBand<string> = getScaleLinear(0, 0, 0, 0);\n  private y: d3.ScaleLinear<number, number, never> | d3.ScaleBand<string> =\n    getScaleLinear(0, 0, 0, 0);\n  private yRight: d3.ScaleLinear<number, number, never> | d3.ScaleBand<string> =\n    getScaleLinear(0, 0, 0, 0);\n  private yGridlineLeft:\n    | d3.ScaleLinear<number, number, never>\n    | d3.ScaleBand<string> = getScaleLinear(0, 0, 0, 0);\n  private yGridlineRight:\n    | d3.ScaleLinear<number, number, never>\n    | d3.ScaleBand<string> = getScaleLinear(0, 0, 0, 0);\n  private xGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private xTopGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private yGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private yRightGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private gridSize: Size = { width: 0, height: 0 };\n  private gridMargin: LayoutPosition = { top: 0, bottom: 0, left: 0, right: 0 };\n  private axisValues: MinMaxValue[] = [{ minValue: 0, maxValue: 0 }];\n  private keyScaleLabels: string[] = [];\n  private keyScaleStep: number = 0;\n  private isVerticalLabel: boolean = false;\n  private labelRotateAngle: number = Math.PI / 3; // 60度\n  private xTextRectArray: DOMRect[] = [];\n\n  // grid factory 私有變數\n  /** 上一筆資料集，若資料集為空則使用這個 */\n  private lastDataSetsWithDataArray: DataSetWithDataArray[] = [\n    {\n      label: '',\n      colors: [],\n      data: [{ key: '', value: 0 }],\n    },\n  ];\n  private gridId: string = getRandomId(8);\n  private pointerover$: Subject<GridPointerEvent> = new Subject();\n  private pointerout$: Subject<PointerEvent> = new Subject();\n  private click$: Subject<GridPointerEvent> = new Subject();\n\n  constructor(private chart: RootSvg) {\n    super();\n    this.gridGroup = this.chart.svg.select(`g#gridFactory_${this.chart.id}_${this.gridId}`).node()\n      ? this.chart.svg.select(`g#gridFactory_${this.chart.id}`)\n      : this.chart.svg.append('g').attr('id', `gridFactory_${this.chart.id}_${this.gridId}`);\n    this.xGroup = this.gridGroup.select('g#x').node()\n      ? this.gridGroup.select('g#x')\n      : this.gridGroup.append('g').attr('id', 'x');\n    this.xTopGroup = this.gridGroup.select('g#x_top').node()\n      ? this.gridGroup.select('g#x_top')\n      : this.gridGroup.append('g').attr('id', 'x_top');\n    this.yGroup = this.gridGroup.select('g#y').node()\n      ? this.gridGroup.select('g#y')\n      : this.gridGroup.append('g').attr('id', 'y');\n    this.yRightGroup = this.gridGroup.select('g#y_right').node()\n      ? this.gridGroup.select('g#y_right')\n      : this.gridGroup.append('g').attr('id', 'y_right');\n  }\n\n  setConfig(config: Partial<GridConfig>): GridFactory {\n    Object.assign(this.gridConfig, config);\n    return this;\n  }\n\n  /** 設定資料，分為堆疊型與非堆疊型 */\n  setDataSetWithDataArrays(\n    dataSetWithDataArraysDetail: {\n      dataSetWithDataArray: DataSetWithDataArray;\n      isStack: boolean;\n      axisIndex?: number;\n    }[]\n  ): GridFactory {\n    this.dataSetWithDataArrays = dataSetWithDataArraysDetail.map(\n      (item) => item.dataSetWithDataArray\n    );\n    this.calculateMinMax(dataSetWithDataArraysDetail);\n    return this;\n  }\n\n  /** 設定 value 軸的刻度等分數量，ex. 數值為 0 ~ 100，5 等分則每個刻度 20 */\n  setStepsCount(stepsCount: number): GridFactory {\n    this.gridConfig.stepsCount = stepsCount;\n    return this;\n  }\n\n  /** 設定 x 軸標籤文字樣式 */\n  setXLabelFont(fontConfig: Partial<FontConfig>): GridFactory {\n    Object.assign(this.gridConfig.xlabelFontConfig, fontConfig);\n    return this;\n  }\n\n  /** 設定 y 軸標籤文字樣式 */\n  setYLabelFont(fontConfig: Partial<FontConfig>): GridFactory {\n    Object.assign(this.gridConfig.ylabelFontConfig, fontConfig);\n    return this;\n  }\n\n  /** 設定 x 軸標籤單位文字 */\n  setKeyLabelUnit(unit: string): GridFactory {\n    this.gridConfig.keyUnit = unit;\n    return this;\n  }\n\n  /** 設定 y 軸標籤單位文字 */\n  setValueLabelUnit(unit: string): GridFactory {\n    this.gridConfig.valueUnit = unit;\n    return this;\n  }\n\n  /** 設定圖表呈現方向，預設為 vertical (key 在 x 軸，value 在 y 軸) */\n  setDirection(direction: Direction): GridFactory {\n    this.gridConfig.direction = direction;\n    return this;\n  }\n\n  /** 設定 key 軸格線繪製的位置\n   * - `KeyGridlineAlignment.center` 格線畫在刻度中心\n   * - `KeyGridlineAlignment.centerPadding` 格線畫在刻度中心，且兩邊多空出一格寬度\n   * - `KeyGridlineAlignment.between` 格線畫在刻度兩邊\n   */\n  setKeyGridlineAlignment(keyGridlineAlignment: KeyGridlineAlignment): GridFactory {\n    this.gridConfig.keyGridlineAlignment = keyGridlineAlignment;\n    return this;\n  }\n\n  /** 設定 key 軸頻帶寬度，數值介於 0 ~ 1 */\n  setBandwidth(bandwidth: number): GridFactory {\n    this.gridConfig.bandwidth = Math.max(0, Math.min(1, bandwidth));\n    return this;\n  }\n\n  /** 設定是否顯示 hover 的區域，需啟用 hover 功能 */\n  setShowHoverArea(isShow: boolean): GridFactory {\n    this.gridConfig.showHoverArea = isShow;\n    return this;\n  }\n\n  /** 設定是否顯示點擊後的選取區域，需啟用 hover 功能 */\n  setShowActiveArea(isShow: boolean): GridFactory {\n    this.gridConfig.showActiveArea = isShow;\n    return this;\n  }\n\n  /** 設定是否啟用 hover 功能 */\n  setHover(isUsePointerEvent: boolean): GridFactory {\n    this.gridConfig.isUsePointerEvent = isUsePointerEvent;\n    return this;\n  }\n\n  /** 設定 hover 區域的顏色 */\n  setHoverColor(hoverColor: string): GridFactory {\n    this.gridConfig.hoverColor = hoverColor;\n    return this;\n  }\n\n  /** 設定 hover 區域的寬度，預設為 -1 (-1代表不設定，寬度為一格 key軸 刻度) */\n  setHoverStrokeWidth(strokeWidth: number): GridFactory {\n    this.gridConfig.hoverStrokeWidth = strokeWidth;\n    return this;\n  }\n\n  /** 設定起始顯示點擊區間的索引值 */\n  setActiveIndex(activeIndex: number): GridFactory {\n    this.gridConfig.activeIndex = activeIndex;\n    return this;\n  }\n\n  /** 設定點擊後的選取區域的顏色 */\n  setActiveColor(activeColor: string): GridFactory {\n    this.gridConfig.activeColor = activeColor;\n    return this;\n  }\n\n  /** 設定點擊後的選取區域對應的 key 軸標籤文字顏色 */\n  setActiveTextColor(activeTextColor: string): GridFactory {\n    this.gridConfig.activeTextColor = activeTextColor;\n    return this;\n  }\n\n  /** 設定格線的最小數值(若最小值大於數據中的最小值，圖表會無視此項設定，自動計算該顯示的最小值)\n   * @param min 最小值\n   * @param axisIndex ? 第幾條 key 軸，預設為 0\n   */\n  setMinValue(min: number, axisIndex: number = 0): GridFactory {\n    this.gridConfig.settingMin[axisIndex == 0 ? 0 : 1] = min;\n    return this;\n  }\n\n  /** 設定格線的最大數值(若最大值小於數據中的最大值，圖表會無視此項設定，自動計算該顯示的最大值)\n   * @param max 最大值\n   * @param axisIndex ? 第幾條 key 軸，預設為 0\n   */\n  setMaxValue(min: number, axisIndex: number = 0): GridFactory {\n    this.gridConfig.settingMax[axisIndex == 0 ? 0 : 1] = min;\n    return this;\n  }\n\n  /** 設定格線與標籤的間距 */\n  setGridGap(gridGap: Partial<LayoutPosition>): GridFactory {\n    Object.assign(this.gridConfig.gridGap, gridGap);\n    return this;\n  }\n\n  /** 設定顯示軸線標籤，(影響格線內推空間) */\n  setShowAxisLabel(isShow: boolean): GridFactory {\n    this.gridConfig.isShowAxisLabel = isShow;\n    return this;\n  }\n\n  getConfig(): GridConfig {\n    return deepCopy(this.gridConfig);\n  }\n\n  getSelector(): string {\n    return `gridFactory_${this.factoryId}`;\n  }\n\n  /** 取得 GridFactory 中不可被設定的值 */\n  getState(): GridState {\n    this.gridState = {\n      id: this.chart.id,\n      x: this.x,\n      xTop: this.xTop,\n      xGridlineBottom: this.xGridlineBottom,\n      xGridlineTop: this.xGridlineTop,\n      y: this.y,\n      yRight: this.yRight,\n      yGridlineLeft: this.yGridlineLeft,\n      yGridlineRight: this.yGridlineRight,\n      gridGroup: this.gridGroup,\n      xGroup: this.xGroup,\n      xTopGroup: this.xTopGroup,\n      yGroup: this.yGroup,\n      yRightGroup: this.yRightGroup,\n      gridSize: this.gridSize,\n      gridMargin: this.gridMargin,\n      axisValues: this.axisValues,\n      keyScaleLabels: this.keyScaleLabels,\n      keyScaleStep: this.keyScaleStep,\n      isVerticalLabel: this.isVerticalLabel,\n      labelRotateAngle: this.labelRotateAngle,\n      xTextRectArray: this.xTextRectArray,\n    };\n    return { ...this.gridState };\n  }\n\n  /** 監聽 Pointerover 事件 */\n  onPointerover(): Observable<GridPointerEvent> {\n    return this.pointerover$.asObservable();\n  }\n\n  /** 監聽 Pointerout 事件 */\n  onPointerout(): Observable<PointerEvent> {\n    return this.pointerout$.asObservable();\n  }\n\n  /** 監聽點擊選取區間的事件 */\n  onClick(): Observable<GridPointerEvent> {\n    return this.click$.asObservable();\n  }\n\n  /** pointerover 觸發的事件 */\n  private pointeroverEvent(\n    keyIndex: number,\n    data: DataSetWithDataArray[],\n    nearestDataIndex: number,\n    event: PointerEvent\n  ) {\n    setTimeout(() => {\n      const el = document.querySelector(\n        `path#hover-area_${this.chart.id}`\n      ) as HTMLElement;\n      this.pointerover$.next({\n        keyIndex: keyIndex,\n        data: this.dataSetWithDataArrays.length > 0 ? data : [],\n        nearestDataIndex: nearestDataIndex,\n        event: event,\n        element: el,\n      });\n    }, 0);\n  }\n\n  /** pointerout 觸發的事件 */\n  private pointeroutEvent(event: PointerEvent) {\n    this.pointerout$.next(event);\n  }\n\n  /** 格線中點擊選取區間的事件 */\n  private clickEvent(\n    keyIndex: number,\n    data: DataSetWithDataArray[],\n    nearestDataIndex: number,\n    event: PointerEvent\n  ) {\n    this.gridConfig.activeIndex = keyIndex;\n    setTimeout(() => {\n      const el = document.querySelector(\n        `path#active-area_${this.chart.id}`\n      ) as HTMLElement;\n      this.click$.next({\n        keyIndex: keyIndex,\n        data: this.dataSetWithDataArrays.length > 0 ? data : [],\n        nearestDataIndex: nearestDataIndex,\n        event: event,\n        element: el,\n      });\n    }, 0);\n  }\n\n  /** 計算最大最小值 */\n  private calculateMinMax(\n    dataSetWithDataArraysDetail: {\n      dataSetWithDataArray: DataSetWithDataArray;\n      isStack: boolean;\n      axisIndex?: number;\n    }[]\n  ) {\n    if (dataSetWithDataArraysDetail.length < 1) return; // 空值不計算\n    // 左右軸線最大最小值\n    const axisValues: MinMaxValue[] = [\n      {\n        minValue: this.gridConfig.settingMin[0],\n        maxValue: this.gridConfig.settingMax[0],\n      },\n    ];\n    const stackDataSetWithDataArrays: DataSetWithDataArray[] = []; // 堆疊的所有資料集合\n    let stackAxisIndex: number = 0; // 堆疊軸線所引值\n    for (const DataSetWithDataArrayDetail of dataSetWithDataArraysDetail) {\n      const axisIndex = DataSetWithDataArrayDetail.axisIndex || 0;\n      if (axisIndex >= axisValues.length) {\n        axisValues.length = axisIndex + 1;\n        axisValues[axisIndex] = {\n          minValue: this.gridConfig.settingMin[1],\n          maxValue: this.gridConfig.settingMax[0],\n        };\n      }\n\n      // 堆疊與非堆疊型分開計算\n      if (DataSetWithDataArrayDetail.isStack) {\n        stackAxisIndex = DataSetWithDataArrayDetail.axisIndex || 0;\n        stackDataSetWithDataArrays.push(\n          DataSetWithDataArrayDetail.dataSetWithDataArray\n        );\n      } else {\n        const valueArray =\n          DataSetWithDataArrayDetail.dataSetWithDataArray.data.map((item) =>\n            Number(item.value)\n          );\n\n        const dataMinValue = Math.min(...valueArray);\n        const dataMaxValue = Math.max(...valueArray);\n\n        axisValues[axisIndex].minValue = Math.min(\n          dataMinValue,\n          axisValues[axisIndex].minValue\n        );\n        axisValues[axisIndex].maxValue = Math.max(\n          dataMaxValue,\n          axisValues[axisIndex].maxValue\n        );\n      }\n    }\n\n    // 計算堆疊最大最小值\n    let stacksMaxPositive = 0;\n    let stacksMaxNegetive = 0;\n    if (stackDataSetWithDataArrays.length > 0) {\n      const categories = stackDataSetWithDataArrays[0].data.map((d) => d.key);\n      const stackData = categories.map((category, i) => {\n        let obj: any = { name: category };\n        stackDataSetWithDataArrays.forEach((d) => {\n          obj[d.label] = d.data[i].value;\n        });\n        return obj;\n      });\n      for (const stackDataItem of stackData) {\n        const keys = Object.keys(stackDataItem);\n        let stackMaxPositive = 0;\n        let stackMaxNegetive = 0;\n        for (let i = 1; i < keys.length; i++) {\n          const value = stackDataItem[keys[i]];\n          if (value > 0) {\n            stackMaxPositive += value;\n          } else {\n            stackMaxNegetive += value;\n          }\n        }\n        stacksMaxPositive = Math.max(stacksMaxPositive, stackMaxPositive);\n        stacksMaxNegetive = Math.min(stacksMaxNegetive, stackMaxNegetive);\n      }\n    }\n\n    for (const [i, axisValue] of axisValues.entries()) {\n      const minValue = Math.min(\n        axisValue.minValue,\n        stackAxisIndex == i ? stacksMaxNegetive : 0,\n        this.gridConfig.settingMin[i]\n      );\n      const maxValue = Math.max(\n        axisValue.maxValue,\n        stackAxisIndex == i ? stacksMaxPositive : 0,\n        this.gridConfig.settingMax[i]\n      );\n\n      const [modifiedMin, modifiedMax] = getPrettyMinMax(\n        minValue,\n        maxValue,\n        this.gridConfig.stepsCount\n      );\n      this.axisValues[i] = { minValue: modifiedMin, maxValue: modifiedMax };\n    }\n  }\n\n  private calcGridSize() {\n    this.gridSize = {\n      width:\n        this.chart.size.width - this.gridMargin.left - this.gridMargin.right,\n      height:\n        this.chart.size.height - this.gridMargin.top - this.gridMargin.bottom,\n    };\n  }\n\n  draw(useAnimation?: boolean) {\n    const isPaddingOuter = this.gridConfig.keyGridlineAlignment == KeyGridlineAlignment.centerPadding;\n\n    // 無資料或全部資料為空，則以上一筆資料設定格狀\n    const dataSetWithDataArrays =\n      this.dataSetWithDataArrays.length < 1\n        ? this.lastDataSetsWithDataArray\n        : this.dataSetWithDataArrays;\n\n    const keySet: Set<any> = new Set();\n    // 遍歷每個 dataset，收集所有的 key\n    dataSetWithDataArrays.forEach((dataset) => {\n      dataset.data.forEach((item) => {\n        keySet.add(item.key);\n      });\n    });\n    this.keyScaleLabels = Array.from(keySet);\n\n    //#region 計算標籤文字長寬，x軸計算第一個與最後一個，y軸計算長度最長的\n    /** 每個軸線的所有 tick */\n    const axisValueTicks: string[][] = [];\n    for (const axisValue of this.axisValues) {\n      const valueRange = Math.abs(axisValue.maxValue - axisValue.minValue);\n      const axisValueTick = d3.range(\n        axisValue.minValue,\n        axisValue.maxValue + 1,\n        valueRange / this.gridConfig.stepsCount\n      );\n      // 加上千分位\n      axisValueTicks.push(axisValueTick.map((item) => item.toLocaleString()));\n    }\n\n    // 顯示軸線標籤時，計算格線內推距離\n    if (this.gridConfig.isShowAxisLabel) {\n      const keyRectArray: DOMRect[] = [];\n      for (const scaleBandKey of this.keyScaleLabels) {\n        const keyRect = getTextRect(\n          scaleBandKey + this.gridConfig.keyUnit,\n          this.gridConfig.xlabelFontConfig['font-family'],\n          this.gridConfig.xlabelFontConfig['font-size'],\n          this.gridConfig.xlabelFontConfig['font-weight']\n        );\n        keyRectArray.push(keyRect);\n      }\n\n      /** 計算每個軸線標籤 Rect */\n      const valueRectArray = axisValueTicks.map((axisitem) =>\n        axisitem.map((pointItem) =>\n          getTextRect(\n            pointItem + this.gridConfig.valueUnit,\n            this.gridConfig.ylabelFontConfig['font-family'],\n            this.gridConfig.ylabelFontConfig['font-size'],\n            this.gridConfig.ylabelFontConfig['font-weight']\n          )\n        )\n      );\n\n      const xTextRectArray =\n        this.gridConfig.direction == Direction.vertical\n          ? [...keyRectArray]\n          : [...valueRectArray[0]];\n      const xFirstTextRect = xTextRectArray[0];\n      const xLastTextRect = xTextRectArray[xTextRectArray.length - 1];\n      const xMaxTextRect =\n        xTextRectArray.length > 0\n          ? xTextRectArray.reduce((maxItem, item) => {\n              return item.width > maxItem.width ? item : maxItem;\n            }, xTextRectArray[0])\n          : { width: 0, height: 0 };\n      this.xTextRectArray = xTextRectArray;\n\n      const yLeftTextRectArray =\n        this.gridConfig.direction == Direction.vertical\n          ? valueRectArray[0]\n          : [...keyRectArray];\n      const yLeftMaxTextRect = yLeftTextRectArray.reduce((maxItem, item) => {\n        return item.width > maxItem.width ? item : maxItem;\n      }, yLeftTextRectArray[0]) || { width: 0, height: 0 };\n\n      // 垂直且有兩個以上的y軸\n      const yRightMaxTextRect =\n        this.axisValues.length > 1\n          ? valueRectArray[1].reduce((maxItem, item) => {\n              return item.width > maxItem.width ? item : maxItem;\n            }, valueRectArray[1][0]) || { width: 0, height: 0 }\n          : new DOMRect();\n\n      this.gridMargin = {\n        top: Math.max(this.gridConfig.gridGap.top, yLeftMaxTextRect.height / 2),\n        bottom: Math.max(\n          xFirstTextRect.height + this.gridConfig.gridGap.bottom,\n          yLeftMaxTextRect.height / 2\n        ),\n        left:\n          Math.max(\n            yLeftMaxTextRect.width + this.gridConfig.gridGap.left,\n            xFirstTextRect.width / 2\n          ) + 2,\n        right:\n          Math.max(\n            yRightMaxTextRect.width + this.gridConfig.gridGap.right,\n            xLastTextRect.width / 2\n          ) + 2,\n      };\n      this.calcGridSize();\n\n      //#region 計算格狀定為step，若字串最大長度大於step則將x軸標籤轉成斜的\n      const scaleStepCount = Math.max(\n        this.keyScaleLabels.length -\n          1 +\n          (isPaddingOuter ? 2 : 0),\n        1\n      );\n      const scaleStep = this.gridSize.width / scaleStepCount;\n      this.isVerticalLabel = xMaxTextRect.width > scaleStep; //若字串最大長度大於step則將x軸標籤轉成斜的\n      this.labelRotateAngle = Math.PI / 3; // 旋轉角度60度\n      const oneLetterRotateWidth =\n        xMaxTextRect.height * Math.cos(this.labelRotateAngle); // 一個字旋轉後的寬度\n      const rotateHeight =\n        (xMaxTextRect.width + xMaxTextRect.height) *\n          Math.sin(this.labelRotateAngle) -\n        xFirstTextRect.height / 2; // 旋轉後的高，xMaxTextRect.height 為單一字元寬度\n      const rotateWidth = xMaxTextRect.width * Math.cos(this.labelRotateAngle); // 旋轉後的寬\n\n      // 重新計算 gridMargin\n      this.gridMargin.left =\n        Math.max(\n          yLeftMaxTextRect.width + this.gridConfig.gridGap.left,\n          this.isVerticalLabel\n            ? rotateWidth -\n                (isPaddingOuter ? scaleStep : 0) -\n                oneLetterRotateWidth\n            : xFirstTextRect.width / 2 -\n                (isPaddingOuter ? scaleStep : 0)\n        ) + 2;\n      this.gridMargin.right =\n        Math.max(\n          yRightMaxTextRect.width + this.gridConfig.gridGap.right,\n          this.isVerticalLabel\n            ? oneLetterRotateWidth -\n                (isPaddingOuter ? scaleStep : 0)\n            : xLastTextRect.width / 2 -\n                (isPaddingOuter &&\n                this.gridConfig.direction == Direction.vertical\n                  ? scaleStep\n                  : 0)\n        ) + 2;\n      this.gridMargin.bottom = Math.max(\n        this.gridConfig.gridGap.bottom +\n          (this.isVerticalLabel ? rotateHeight : xFirstTextRect.height),\n        yLeftMaxTextRect.height / 2\n      );\n      //#endregion\n    } else {\n      this.gridMargin = {\n        top: this.gridConfig.gridGap.top,\n        bottom: this.gridConfig.gridGap.bottom + 2,\n        left: this.gridConfig.gridGap.left,\n        right: this.gridConfig.gridGap.right + 2,\n      };\n    }\n\n    this.calcGridSize();\n\n    this.gridGroup\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .attr(\n        'transform',\n        `translate(${this.gridMargin.left}, ${this.gridMargin.top})`\n      );\n\n    //#region x y scacle 設定\n    const paddingOuter = (() => {switch(this.gridConfig.keyGridlineAlignment) {\n      case KeyGridlineAlignment.between: return 0.5;\n      case KeyGridlineAlignment.centerPadding: return 1;\n      default: return 0;\n    }})();\n    const bandwidth = 1 - this.gridConfig.bandwidth;\n    if (this.gridConfig.direction == Direction.vertical) {\n      this.xGridlineBottom = getScaleBand(\n        this.keyScaleLabels,\n        0,\n        this.gridSize.width,\n        bandwidth,\n        paddingOuter\n      );\n      this.y = getScaleLinear(\n        this.axisValues[0].minValue,\n        this.axisValues[0].maxValue,\n        this.gridSize.height,\n        0\n      );\n      this.yGridlineLeft = getScaleBand(\n        axisValueTicks[0].map((item) => item.toString()),\n        this.gridSize.height,\n        0,\n        1\n      );\n\n      // 右方 Y 軸\n      if (this.axisValues.length > 1) {\n        this.yRight = getScaleLinear(\n          this.axisValues[1].minValue,\n          this.axisValues[1].maxValue,\n          this.gridSize.height,\n          0\n        );\n        this.yGridlineRight = getScaleBand(\n          axisValueTicks[1].map((item) => item.toString()),\n          this.gridSize.height,\n          0,\n          1\n        );\n      }\n    } else {\n      this.x = getScaleLinear(\n        this.axisValues[0].minValue,\n        this.axisValues[0].maxValue,\n        0,\n        this.gridSize.width\n      );\n      this.xGridlineBottom = getScaleBand(\n        axisValueTicks[0].map((item) => item.toString()),\n        0,\n        this.gridSize.width,\n        1\n      );\n      this.yGridlineLeft = getScaleBand(\n        this.keyScaleLabels,\n        this.gridSize.height,\n        0,\n        bandwidth,\n        paddingOuter\n      );\n\n      // 上方 X 軸\n      if (this.axisValues.length > 1) {\n        this.xTop = getScaleLinear(\n          this.axisValues[1].minValue,\n          this.axisValues[1].maxValue,\n          0,\n          this.gridSize.width\n        );\n        this.xGridlineTop = getScaleBand(\n          axisValueTicks[1].map((item) => item.toString()),\n          0,\n          this.gridSize.width,\n          1\n        );\n      }\n    }\n\n    this.keyScaleStep =\n      this.gridConfig.direction == Direction.vertical\n        ? (this.xGridlineBottom as any).step()\n        : (this.yGridlineLeft as any).step();\n    //#endregion\n\n    this.getState();\n\n    // hover effect\n    if (this.gridConfig.isUsePointerEvent) {\n      setTimeout(() => {\n        hoverPosition(\n          this.chart,\n          this.gridState,\n          this.gridConfig,\n          this.lastDataSetsWithDataArray,\n          getColorTypeArray(this.dataSetWithDataArrays),\n          this.pointeroverEvent.bind(this),\n          this.pointeroutEvent.bind(this),\n          this.clickEvent.bind(this)\n        );\n      }, 0);\n    } else {\n      this.chart.svg\n        .selectAll(`g#grid-hover-view_${this.gridState.id}_${this.gridId}`)\n        .remove();\n      this.chart.svg\n        .selectAll(`g#grid-hover-effects_${this.gridState.id}_${this.gridId}`)\n        .remove();\n    }\n\n    this.lastDataSetsWithDataArray = deepCopy(this.dataSetWithDataArrays);\n  }\n\n  clear(useAnimation?: boolean) {\n    this.gridGroup\n    .selectAll('path')\n    .transition()\n    .duration(useAnimation ? 500 : 0)\n    .style('opacity', 0)\n    .remove();\n  }\n}\n\n/** 取得比例尺-線性刻度: 連續的數值 */\nfunction getScaleLinear(\n  domainS: number,\n  domainE: number,\n  rangeS: number,\n  rangeE: number\n): d3.ScaleLinear<number, number, never> {\n  return d3.scaleLinear().domain([domainS, domainE]).range([rangeS, rangeE]);\n}\n\n/** 取得比例尺-非線性刻度: ex: 非連續性資料像是性別或人名或是任意的資料集*/\nfunction getScaleBand(\n  keys: string[],\n  rangeS: number,\n  rangeE: number,\n  bandwidth: number,\n  paddingOuter: number = 0\n): d3.ScaleBand<string> {\n  return d3\n    .scaleBand()\n    .domain(keys)\n    .range([rangeS, rangeE])\n    .padding(bandwidth)\n    .paddingOuter(paddingOuter - (1 - bandwidth) / 2);\n}\n\n/** hover 顯示當前x位置的所有點 */\nfunction hoverPosition(\n  rootChart: RootSvg,\n  gridState: GridState,\n  gridConfig: GridConfig,\n  data: DataSetWithDataArray[],\n  colors: Color[][],\n  hoverCallback: Function,\n  pointeroutCallback: Function,\n  clickCallback: Function\n) {\n  let lastIndex = -1;\n  let lastPostion = -1; // 計算滑鼠移動\n  let nearestIndex = -1; // 距離滑鼠最近的數據組索引值\n  let activeIndex = gridConfig.activeIndex;\n  const id = rootChart.id;\n  const isVertical = gridConfig.direction == Direction.vertical;\n  const step = isVertical\n    ? (gridState.xGridlineBottom as any).step()\n    : (gridState.yGridlineLeft as any).step();\n  const dataLength = data[0].data.length;\n  const isPaddingOuter = gridConfig.keyGridlineAlignment == KeyGridlineAlignment.centerPadding;\n\n  //#region 元素生成\n  rootChart.svg.selectAll(`g#grid-hover-effects_${id}`).remove();\n  rootChart.svg.selectAll(`g#grid-hover-view_${id}`).remove();\n  const hoverViewGroup = rootChart.svg\n    .insert('g', `g#gridFactory_${id}`)\n    .attr('id', `grid-hover-view_${id}`);\n\n  const hoverEffectsGroup = rootChart.svg\n    .append('g')\n    .attr('id', `grid-hover-effects_${id}`);\n\n  hoverViewGroup\n    .append('path')\n    .attr('id', `hover-area_${id}`)\n    .attr('stroke', gridConfig.hoverColor)\n    .style('opacity', '0');\n\n  hoverViewGroup\n    .append('path')\n    .attr('id', `active-area_${id}`)\n    .attr('stroke', gridConfig.activeColor)\n    .style('opacity', '0');\n\n  const pointOfData = hoverViewGroup\n    .selectAll(`#point-of-data_${id}`)\n    .data(data)\n    .enter()\n    .append('g')\n    .attr('id', `point-of-data_${id}`);\n\n  const selector = `path#active-area_${id}`;\n  drawArea(activeIndex, step, false);\n  d3.select(selector).style('opacity', 0);\n  if (gridConfig.isUsePointerEvent && gridConfig.showActiveArea && activeIndex >= 0) {\n    d3.select(selector).style('opacity', 1);\n  }\n\n  if (gridConfig.showHoverPoint) {\n    pointOfData\n      .append('circle')\n      .datum((d: any) => d)\n      .attr('r', 7)\n      .attr('stroke', 'white')\n      .attr('stroke-width', 2)\n      .style('fill', (d: any, i: number) => {\n        return colors[i][0].color;\n      })\n      .style('opacity', '0');\n  }\n  //#endregion\n\n  //#region 共用方法\n  /** 滑鼠事件取得當前 key 軸 index */\n  function getIndex(event: PointerEvent): number {\n    const pointer = d3.pointer(event);\n    let index = 0;\n    const step = isVertical\n      ? (gridState.xGridlineBottom as any).step()\n      : (gridState.yGridlineLeft as any).step();\n\n    if (dataLength > 1) {\n      if (isVertical) {\n        index = Math.round((pointer[0] - gridState.gridMargin.left) / step);\n      } else {\n        index = Math.round((pointer[1] - gridState.gridMargin.top) / step);\n      }\n    }\n    // 若存在左右邊界，校正位置\n    if (isPaddingOuter) {\n      if (index > 0 && index < dataLength + 1) {\n        index -= 1;\n      } else if (index > dataLength) {\n        index = dataLength - 1;\n      }\n    }\n    return isVertical ? index : dataLength - index - 1;\n  }\n\n  /** 檢查當前 index 是否要顯示區間，並回傳資料 */\n  function checkIndexAndData(index: number): DataSetWithDataArray[] {\n    const shouldShow =\n      gridConfig.showHoverArea &&\n      (activeIndex !== index || !gridConfig.showActiveArea);\n    d3.select(`#hover-area_${id}`).style('opacity', shouldShow ? '1' : '0');\n    d3.selectAll(`#point-of-data_${id} circle`).style(\n      'opacity',\n      shouldShow ? '1' : '0'\n    );\n\n    return data.map((item) => {\n      return {\n        label: item.label,\n        data: [item.data[index]],\n        colors: item.colors,\n      };\n    });\n  }\n\n  /** 畫出區域 */\n  function drawArea(\n    index: number,\n    step: number,\n    isUsePointerEvent: boolean = true\n  ): number {\n    let position =\n      dataLength < 2\n        ? 0.5 * step\n        : (isVertical ? index : dataLength - index - 1) * step;\n    position += isVertical\n      ? gridState.gridMargin.left\n      : gridState.gridMargin.top;\n    position = isPaddingOuter ? position + step : position;\n\n    // 畫出 hover 區域\n    const selector = isUsePointerEvent ? `#hover-area_${id}` : `path#active-area_${id}`;\n    d3.select(selector)\n      .attr('d', () => {\n        let d = '';\n        if (isVertical) {\n          d =\n            'M' +\n            position +\n            ',' +\n            (gridState.gridSize.height + gridState.gridMargin.top);\n          d += ' ' + position + ',' + gridState.gridMargin.top;\n        } else {\n          d =\n            'M' +\n            (gridState.gridSize.width + gridState.gridMargin.left) +\n            ',' +\n            position;\n          d += ' ' + gridState.gridMargin.left + ',' + position;\n        }\n        return d;\n      })\n      .attr('stroke-width', () => {\n        let width = gridConfig.hoverStrokeWidth < 0 ? step : gridConfig.hoverStrokeWidth;\n        if (\n          !isPaddingOuter &&\n          (index == 0 || index == dataLength - 1)\n        ) {\n          width /= 2;\n        }\n        return `${width}px`;\n      })\n      .style('transform', () => {\n        let translate = 0;\n        const stepWidth = gridConfig.hoverStrokeWidth < 0 ? step: gridConfig.hoverStrokeWidth;\n        if (!isPaddingOuter) {\n          if (index == 0) {\n            translate =  gridConfig.hoverStrokeWidth < 0 ? stepWidth / 4 : stepWidth / 2;\n          } else if (index == dataLength - 1) {\n            translate = gridConfig.hoverStrokeWidth < 0 ? -stepWidth / 4 : -stepWidth / 2;\n          }\n        }\n        return `translate${isVertical ? 'X' : 'Y'}(${translate}px)`;\n      })\n      .style('opacity', 1);\n\n    if (!isUsePointerEvent && gridConfig.showActiveArea) {\n      setTimeout(() => {\n        d3.select(`g#gridFactory_${id}`)\n          .select(isVertical ? 'g#x' : 'g#y')\n          .selectAll('g.tick')\n          .filter((d, i) => i == index)\n          .select('text')\n          .style('fill', gridConfig.activeTextColor);\n      }, 0);\n    }\n    return position;\n  }\n  //#endregion\n\n  // 事件處理\n  hoverEffectsGroup\n    .append('svg:rect')\n    .attr('class', 'hover-bounding')\n    .attr('id', id)\n    .attr('width', gridState.gridSize.width)\n    .attr('height', gridState.gridSize.height)\n    .attr('x', gridState.gridMargin.left)\n    .attr('y', gridState.gridMargin.top)\n    .attr('fill', 'none')\n    .attr('pointer-events', 'all')\n    .on('pointerout', (event: PointerEvent) => {\n      d3.select(`#hover-area_${id}`).style('opacity', '0');\n      d3.selectAll(`#point-of-data_${id} circle`).style('opacity', '0');\n      lastPostion = -1;\n      pointeroutCallback(event);\n    })\n    .on('pointerover', (event: PointerEvent) => {\n      const index = getIndex(event);\n      checkIndexAndData(index);\n    })\n    .on('pointermove', (event: PointerEvent) => {\n      // const elements = document.elementsFromPoint(event.x, event.y);\n      const index = getIndex(event);\n      const position = drawArea(index, step);\n      const hoverData = checkIndexAndData(index);\n      lastIndex = index;\n      const dataPointTransformArray: { x: number; y: number }[] = [];\n\n      // hover key 軸上的點\n      d3.selectAll(`#point-of-data_${id}`).attr(\n        'transform',\n        function (d: any, i) {\n          // 變換顯示線條時改變tooltip\n          if (lastPostion != position) {\n            lastPostion = position;\n          }\n\n          let x = isVertical\n            ? position\n            : (gridState.xGridlineBottom(\n                d.data[d.data.length - index - 1].value\n              ) as number);\n\n          let y = isVertical\n            ? (gridState.y(d.data[index].value) as number) +\n              gridState.gridMargin.top\n            : position;\n\n          x = isNaN(x) ? 0 : x;\n          y = isNaN(y) ? 0 : y;\n          const transform = `translate(${x},${y})`;\n          // console.log(y)\n          dataPointTransformArray.push({ x: x, y: y });\n          return transform;\n        }\n      );\n\n      //#region 計算最近的資料點\n      const pointer = d3.pointer(event);\n      const x = pointer[0];\n      const y = pointer[1];\n      let minDistance = Infinity;\n      nearestIndex = -1;\n      for (const [i, dataPointTransform] of dataPointTransformArray.entries()) {\n        const dx = dataPointTransform.x - x;\n        const dy = dataPointTransform.y - y;\n        const distance = Math.sqrt(dx * dx + dy * dy);\n        if (distance < minDistance) {\n          minDistance = distance;\n          nearestIndex = i;\n        }\n      }\n      //#endregion\n      hoverCallback(index, hoverData, nearestIndex, event);\n    })\n    .on('click', function (event: PointerEvent) {\n      const index = getIndex(event);\n      d3.select(`g#gridFactory_${id}`)\n        .select(isVertical ? 'g#x' : 'g#y')\n        .selectAll('g.tick')\n        .filter((d, i) => i == activeIndex)\n        .select('text')\n        .style('fill', ColorType.AxisLabel);\n\n      activeIndex = index;\n      drawArea(index, step, false);\n      if (!gridConfig.showActiveArea) {\n        const selector = `path#active-area_${id}`;\n        d3.select(selector).style('opacity', 0);\n      }\n\n      const clickData = checkIndexAndData(index);\n      clickCallback(index, clickData, nearestIndex, event);\n    });\n}\n\n/** 取得漂亮的最小值與最大值，且可平分為 n 個刻度 */\nfunction getPrettyMinMax(min: number, max: number, stepsCount: number) {\n  if (stepsCount < 2) return [min, max];\n  const range = Math.abs(max - min);\n  const rawStep = range / stepsCount; // 原始刻度一格單位長度\n  const ticks: number[] = [];\n  for (let i = 0; i <= stepsCount; i++) {\n    ticks.push(rawStep * i + min);\n  }\n  // 取出ticks中最接近0的index\n  const nearZeroIndex = ticks.reduce(\n    (minIndex, item, index, src) =>\n      Math.abs(item) < Math.abs(src[minIndex]) ? index : minIndex,\n    0\n  );\n  // 計算正負比例，ex. ticks = [-3,2,7,12]; 正負比例為 1:2;\n  let negativeRatio =\n    nearZeroIndex + (nearZeroIndex == 0 && ticks[0] < 0 ? 1 : 0); // nearZeroIndex 為 0 且 ticks[0] < 0 需 + 1\n  let positiveRatio = ticks.length - negativeRatio - 1;\n  if (positiveRatio == 0 && ticks[ticks.length - 1] > 0) {\n    positiveRatio += 1;\n    negativeRatio -= 1;\n  }\n\n  const negativeStep = negativeRatio > 0 ? Math.abs(min / negativeRatio) : 0;\n  const positiveStep = positiveRatio > 0 ? Math.abs(max / positiveRatio) : 0;\n  const nAndPStep = Math.max(negativeStep, positiveStep); // 正負計算後的刻度一格單位長度\n  const modifiedStep = Math.ceil(nAndPStep / 5) * 5; // step改成漂亮的數字(5的倍數)\n  const modifiedMin = -modifiedStep * negativeRatio;\n  const modifiedMax = modifiedStep * positiveRatio;\n\n  return [modifiedMin, modifiedMax];\n}\n","import { ColorType } from '../../../enum/color.enum';\n\nexport interface GridlineConfig {\n  /** 格線 row 設定 */\n  gridRow: GridlineSetting;\n  /** 格線 col 設定 */\n  gridCol: GridlineSetting;\n  /** x 軸線設定 */\n  xAxis: GridlineSetting;\n  /** y 軸線設定 */\n  yAxis: GridlineSetting;\n  /** 是否顯示邊框 */\n  showBorder: boolean;\n  /** 每幾個 tick 顯示一次key軸的格線，預設為 1 (每個 tick 都顯示) */\n  tickInterval: number;\n}\n\nexport const DefaultGridlineConfig: GridlineConfig = {\n  gridRow: {\n    stroke: ColorType.Grid,\n    'stroke-width': 1,\n    'stroke-dasharray': 'unset',\n    'stroke-linecap' : 'butt'\n  },\n  gridCol: {\n    stroke: ColorType.Grid,\n    'stroke-width': 1,\n    'stroke-dasharray': 'unset',\n    'stroke-linecap' : 'butt'\n  },\n  xAxis: {\n    stroke: ColorType.Grid,\n    'stroke-width': 1,\n    'stroke-dasharray': 'unset',\n    'stroke-linecap' : 'butt'\n  },\n  yAxis: {\n    stroke: ColorType.Grid,\n    'stroke-width': 1,\n    'stroke-dasharray': 'unset',\n    'stroke-linecap' : 'butt'\n  },\n  showBorder: true,\n  tickInterval: 1\n};\n\n/**\n * gridline 相關設定\n * - `stroke` : string\n * - `stroke-width` : number\n * - `stroke-dasharray` : string\n */\nexport interface GridlineSetting {\n  stroke: string;\n  'stroke-width': number;\n  'stroke-dasharray': string;\n  'stroke-linecap': 'butt' | 'round' | 'square';\n}\n","import * as d3 from 'd3';\nimport { BasicFactory } from '../../basic-factory';\nimport { GridFactory } from '../grid/grid-factory';\nimport { GridState } from '../grid/grid.state';\nimport { GridConfig, KeyGridlineAlignment } from '../grid/grid.config';\nimport {\n  DefaultGridlineConfig,\n  GridlineConfig,\n  GridlineSetting,\n} from './gridline.config';\nimport { deepCopy } from '../../../function/common.function';\nimport { Direction } from '../../../enum/enum';\n\n/** 格線組件，需繪製在 GridFactory 上 */\nexport class GridlineFactory extends BasicFactory<GridlineFactory> {\n  private gridFactory: GridFactory;\n  private gridState: GridState;\n  private gridConfig: GridConfig;\n  private gridlineConfig: GridlineConfig = deepCopy(DefaultGridlineConfig);\n\n  constructor(gridFactory: GridFactory) {\n    super();\n    this.gridFactory = gridFactory;\n    this.gridState = gridFactory.getState();\n    this.gridConfig = gridFactory.getConfig();\n  }\n\n  /** 設定要被繪製在哪個 GridFactory 上 */\n  setGridFactory(gridFactory: GridFactory): GridlineFactory {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  setConfig(gridlineConfig: Partial<GridlineConfig>): GridlineFactory {\n    Object.assign(this.gridlineConfig, gridlineConfig);\n    return this;\n  }\n\n  /** 設定橫向格線的樣式 */\n  setGridRow(gridlineSetting: Partial<GridlineSetting>): GridlineFactory {\n    Object.assign(this.gridlineConfig.gridRow, gridlineSetting);\n    return this;\n  }\n\n  /** 設定縱向格線的樣式 */\n  setGridCol(gridlineSetting: Partial<GridlineSetting>): GridlineFactory {\n    Object.assign(this.gridlineConfig.gridCol, gridlineSetting);\n    return this;\n  }\n\n  /** 設定X軸線的樣式 */\n  setXAxis(gridlineSetting: Partial<GridlineSetting>): GridlineFactory {\n    Object.assign(this.gridlineConfig.xAxis, gridlineSetting);\n    return this;\n  }\n\n  /** 設定Y軸線的樣式 */\n  setYAxis(gridlineSetting: Partial<GridlineSetting>): GridlineFactory {\n    Object.assign(this.gridlineConfig.yAxis, gridlineSetting);\n    return this;\n  }\n\n  getSelector(): string {\n    return ``;\n  }\n\n  getConfig(): GridlineConfig {\n    return this.gridlineConfig;\n  }\n\n  draw(useAnimation: boolean = true): void {\n    this.gridState = this.gridFactory.getState();\n    this.gridConfig = this.gridFactory.getConfig();\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const isBetween =\n      this.gridConfig.keyGridlineAlignment == KeyGridlineAlignment.between;\n    //#region X\n    const xConfig = d3\n      .axisBottom(\n        this.gridState.xGridlineBottom as d3.AxisScale<string | number>\n      )\n      .tickSize(-this.gridState.gridSize.height)\n      .tickFormat((d) => {\n        return (\n          d + (isVertical ? this.gridConfig.keyUnit : this.gridConfig.valueUnit)\n        );\n      });\n\n    const gridXGroup = this.gridState.xGroup\n      .attr('transform', `translate(0, ${this.gridState.gridSize.height})`)\n      .attr('pointer-events', 'none')\n      .call((selection) =>\n        selection.transition().duration(useAnimation ? 500 : 0)\n      )\n      .call(xConfig);\n\n    if (this.gridConfig.isShowAxisLabel) {\n      gridXGroup\n        .selectAll('.tick text')\n        .attr('transform', (d, i) => {\n          const rotateHeight =\n            (this.gridState.xTextRectArray[i].width *\n              Math.sin(this.gridState.labelRotateAngle)) /\n            2; // 旋轉後的高\n          const rotateWidth =\n            (this.gridState.xTextRectArray[i].width *\n              Math.cos(this.gridState.labelRotateAngle)) /\n            2; // 旋轉後的寬\n          const translateX = this.gridState.isVerticalLabel\n            ? `${-rotateWidth}`\n            : '0';\n          const translateY =\n            this.gridConfig.gridGap.bottom +\n            (this.gridState.isVerticalLabel ? rotateHeight : 0);\n          const translate = `translate(${translateX}, ${translateY})`;\n          const rotate = this.gridState.isVerticalLabel\n            ? `rotate(-${(this.gridState.labelRotateAngle * 180) / Math.PI})`\n            : '';\n          return `${translate} ${rotate}`;\n        })\n        .attr('font-size', this.gridConfig.xlabelFontConfig['font-size'])\n        .attr('font-weight', this.gridConfig.xlabelFontConfig['font-weight'])\n        .attr('font-family', this.gridConfig.xlabelFontConfig['font-family'])\n        .attr('line-height', 1)\n        .style('user-select', 'none')\n        .style('fill', this.gridConfig.xlabelFontConfig.color);\n    } else {\n      gridXGroup.selectAll('.tick text').remove();\n    }\n\n    gridXGroup\n      .selectAll('.tick line')\n      .attr('stroke', this.gridlineConfig.gridCol.stroke)\n      .attr('stroke-width', this.gridlineConfig.gridCol['stroke-width'])\n      .attr('stroke-linecap', this.gridlineConfig.gridCol['stroke-linecap'])\n      .attr(\n        'transform',\n        `translate(${\n          isBetween\n            ? (\n                this.gridState.xGridlineBottom as d3.ScaleBand<string>\n              ).bandwidth()\n            : 0\n        },0)`\n      );\n    gridXGroup.select('path.domain').attr('stroke', 'none');\n\n    // 上方 X 軸\n    if (this.gridState.axisValues.length > 1) {\n      const xTopConfig = d3\n        .axisTop(this.gridState.xGridlineTop as d3.AxisScale<string | number>)\n        .tickSize(-this.gridState.gridSize.height)\n        .tickFormat((d) => {\n          return (\n            d +\n            (isVertical ? this.gridConfig.keyUnit : this.gridConfig.valueUnit)\n          );\n        });\n\n      if (this.gridConfig.direction == Direction.vertical) {\n        this.gridState.xTopGroup.selectAll('*').remove();\n      } else {\n        const gridXTopGroup = this.gridState.xTopGroup\n          .attr('transform', `translate(0, 0)`)\n          .attr('pointer-events', 'none')\n          .transition()\n          .duration(useAnimation ? 500 : 0)\n          .call(xTopConfig);\n\n        if (this.gridConfig.isShowAxisLabel) {\n          gridXTopGroup\n            .selectAll('.tick text')\n            .attr('transform', `translate(0, ${this.gridConfig.gridGap.top})`)\n            .attr('font-size', this.gridConfig.xlabelFontConfig['font-size'])\n            .attr(\n              'font-weight',\n              this.gridConfig.xlabelFontConfig['font-weight']\n            )\n            .attr(\n              'font-family',\n              this.gridConfig.xlabelFontConfig['font-family']\n            )\n            .style('user-select', 'none')\n            .style('fill', this.gridConfig.xlabelFontConfig.color);\n        } else {\n          gridXTopGroup.selectAll('.tick text').remove();\n        }\n\n        gridXTopGroup\n          .selectAll('.tick line')\n          .attr('stroke', this.gridlineConfig.gridCol.stroke)\n          .attr('stroke-width', this.gridlineConfig.gridCol['stroke-width'])\n          .attr(\n            'transform',\n            `translate(${\n              isBetween\n                ? (\n                    this.gridState.xGridlineTop as d3.ScaleBand<string>\n                  ).bandwidth()\n                : 0\n            },0)`\n          );\n        gridXTopGroup.select('path.domain').attr('stroke', 'none');\n      }\n    }\n    //#endregion\n\n    //#region Y\n    const yConfig = d3\n      .axisLeft(this.gridState.yGridlineLeft as d3.AxisScale<string | number>)\n      .tickSize(-this.gridState.gridSize.width)\n      .tickFormat((d) => {\n        return (\n          d + (isVertical ? this.gridConfig.valueUnit : this.gridConfig.keyUnit)\n        );\n      });\n\n    const gridYGroup = this.gridState.yGroup\n      .attr('pointer-events', 'none')\n      .call((selection) =>\n        selection.transition().duration(useAnimation ? 500 : 0)\n      )\n      .call(yConfig);\n\n    if (this.gridConfig.isShowAxisLabel) {\n      gridYGroup\n        .selectAll('.tick text')\n        .attr('transform', `translate(${-this.gridConfig.gridGap.left}, 0)`)\n        .attr('font-size', this.gridConfig.ylabelFontConfig['font-size'])\n        .attr('font-weight', this.gridConfig.ylabelFontConfig['font-weight'])\n        .attr('font-family', this.gridConfig.ylabelFontConfig['font-family'])\n        .attr('line-height', 1)\n        .style('user-select', 'none')\n        .style('fill', this.gridConfig.ylabelFontConfig.color);\n    } else {\n      gridYGroup.selectAll('.tick text').remove();\n    }\n\n    gridYGroup\n      .selectAll('.tick line')\n      .attr('stroke', this.gridlineConfig.gridRow.stroke)\n      .attr('stroke-width', this.gridlineConfig.gridRow['stroke-width'])\n      .attr('stroke-linecap', this.gridlineConfig.gridRow['stroke-linecap'])\n      .attr(\n        'transform',\n        `translate(0, ${\n          isBetween\n            ? (this.gridState.yGridlineLeft as d3.ScaleBand<string>).bandwidth()\n            : 0\n        })`\n      );\n    gridYGroup.select('path.domain').attr('stroke', 'none');\n\n    // 右方 Y 軸\n    if (this.gridState.axisValues.length > 1) {\n      const yRightConfig = d3\n        .axisRight(\n          this.gridState.yGridlineRight as d3.AxisScale<string | number>\n        )\n        .tickSize(-this.gridState.gridSize.width)\n        .ticks(10)\n        .tickFormat((d) => {\n          return (\n            d +\n            (isVertical ? this.gridConfig.valueUnit : this.gridConfig.keyUnit)\n          );\n        });\n\n      if (this.gridConfig.direction == Direction.horizontal) {\n        this.gridState.yRightGroup.selectAll('*').remove();\n      } else {\n        const gridYRightGroup = this.gridState.yRightGroup\n          .attr('transform', `translate(${this.gridState.gridSize.width}, 0)`)\n          .attr('pointer-events', 'none')\n          .transition()\n          .duration(useAnimation ? 500 : 0)\n          .call(yRightConfig);\n\n        if (this.gridConfig.isShowAxisLabel) {\n          gridYRightGroup\n            .selectAll('.tick text')\n            .attr('transform', `translate(${this.gridConfig.gridGap.right}, 0)`)\n            .attr('font-size', this.gridConfig.ylabelFontConfig['font-size'])\n            .attr(\n              'font-weight',\n              this.gridConfig.ylabelFontConfig['font-weight']\n            )\n            .attr(\n              'font-family',\n              this.gridConfig.ylabelFontConfig['font-family']\n            )\n            .style('user-select', 'none')\n            .style('fill', this.gridConfig.ylabelFontConfig.color);\n        } else {\n          gridYRightGroup.selectAll('.tick text').remove();\n        }\n\n        gridYRightGroup\n          .selectAll('.tick line')\n          .attr('stroke', this.gridlineConfig.gridRow.stroke)\n          .attr('stroke-width', this.gridlineConfig.gridRow['stroke-width'])\n          .attr(\n            'transform',\n            `translate(0, ${\n              isBetween\n                ? (\n                    this.gridState.yGridlineRight as d3.ScaleBand<string>\n                  ).bandwidth()\n                : 0\n            })`\n          );\n        gridYRightGroup.select('path.domain').attr('stroke', 'none');\n      }\n    }\n    //#endregion\n\n    //#region 左右兩邊與上下兩邊 axis 特別處理\n    setTimeout(() => {\n      const xBBox = (\n        gridXGroup.select('path.domain').node() as SVGGraphicsElement\n      ).getBBox();\n      const xLeftAxis = gridXGroup.select('line.xLeftAxis').empty()\n        ? gridXGroup.append('line').attr('class', 'xLeftAxis')\n        : (gridXGroup.select('line.xLeftAxis') as any);\n      xLeftAxis\n        .attr('x1', xBBox.x)\n        .attr('y1', xBBox.y)\n        .attr('x2', xBBox.x)\n        .attr('y2', xBBox.y + xBBox.height)\n        .attr('stroke', this.gridlineConfig.xAxis.stroke)\n        .attr('stroke-width', this.gridlineConfig.xAxis['stroke-width'])\n        .attr('stroke-linecap', this.gridlineConfig.xAxis['stroke-linecap']);\n\n      const xRightAxis = gridXGroup.select('line.xRightAxis').empty()\n        ? gridXGroup.append('line').attr('class', 'xRightAxis')\n        : (gridXGroup.select('line.xRightAxis') as any);\n      xRightAxis\n        .attr('x1', xBBox.x + xBBox.width)\n        .attr('y1', xBBox.y)\n        .attr('x2', xBBox.x + xBBox.width)\n        .attr('y2', xBBox.y + xBBox.height)\n        .attr('stroke', this.gridlineConfig.xAxis.stroke)\n        .attr(\n          'stroke-width',\n          this.gridlineConfig.showBorder\n            ? this.gridlineConfig.xAxis['stroke-width']\n            : '0'\n        )\n        .attr('stroke-linecap', this.gridlineConfig.xAxis['stroke-linecap']);\n\n      const yBBox = (\n        gridYGroup.select('path.domain').node() as SVGGraphicsElement\n      ).getBBox();\n      const yTopAxis = gridYGroup.select('line.yTopAxis').empty()\n        ? gridYGroup.append('line').attr('class', 'yTopAxis')\n        : (gridYGroup.select('line.yTopAxis') as any);\n      yTopAxis\n        .attr('x1', yBBox.x)\n        .attr('y1', yBBox.y)\n        .attr('x2', yBBox.x + yBBox.width)\n        .attr('y2', yBBox.y)\n        .attr('stroke', this.gridlineConfig.yAxis.stroke)\n        .attr(\n          'stroke-width',\n          this.gridlineConfig.showBorder\n            ? this.gridlineConfig.yAxis['stroke-width']\n            : '0'\n        )\n        .attr('stroke-linecap', this.gridlineConfig.yAxis['stroke-linecap']);\n\n      const yBottomAxis = gridYGroup.select('line.yBottomAxis').empty()\n        ? gridYGroup.append('line').attr('class', 'yBottomAxis')\n        : (gridYGroup.select('line.yBottomAxis') as any);\n      yBottomAxis\n        .attr('x1', yBBox.x)\n        .attr('y1', yBBox.y + yBBox.height)\n        .attr('x2', yBBox.x + yBBox.width)\n        .attr('y2', yBBox.y + yBBox.height)\n        .attr('stroke', this.gridlineConfig.yAxis.stroke)\n        .attr('stroke-width', this.gridlineConfig.yAxis['stroke-width'])\n        .attr('stroke-linecap', this.gridlineConfig.yAxis['stroke-linecap']);\n\n      // 設定每n筆資料顯示一筆 key\n      const keyGroup = isVertical ? gridXGroup : gridYGroup;\n      const keyTick = keyGroup.selectAll('.tick');\n      keyTick.each((d, i, nodes) => {\n        const el = nodes[i]; // 取得當前 DOM 元素\n        d3.select(el).style('opacity', (i + 1) % this.gridlineConfig.tickInterval === 0 ? 1 : 0);\n      });\n    }, 0);\n    //#endregion\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.gridState.xGroup\n      .selectAll('*')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n    this.gridState.yGroup\n      .selectAll('*')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n    this.gridState.yRightGroup\n      .selectAll('*')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n}\n","/** 標示座標(x,y)\n * @param x: number\n * @param y: number\n */\nexport interface Position {\n  x: number;\n  y: number;\n}\n\n/** 標示定位(上下左右)\n * @param top: number\n * @param bottom: number\n * @param left: number\n * @param right: number\n */\nexport interface LayoutPosition {\n  top: number;\n  bottom: number;\n  left: number;\n  right: number;\n}\n\nexport type PositionX = keyof typeof PositionXType;\nexport type PositionY = keyof typeof PositionYType;\n\nexport enum PositionXType {\n  left = 'left',\n  center = 'center',\n  right = 'right',\n}\n\nexport enum PositionYType {\n  top = 'top',\n  center = 'center',\n  bottom = 'bottom',\n}\n","import { Color } from '../../config/color.config';\nimport { Data } from '../../interface/common.interface';\nimport {\n  PositionXType,\n  PositionYType,\n} from '../../interface/position.interface';\nimport { PositionStrategy } from './position-strategy.function';\n\nexport interface TooltipConfig {\n  /** 標題 */\n  title: string;\n  /** 黏著元素 */\n  element: Element;\n  /** 黏著元素的 DOMRect */\n  rect: DOMRect;\n  /** 資料顏色陣列 */\n  colorsArray: Color[][];\n  /** 資料陣列 */\n  data: Data[];\n  /** 顯示策略 */\n  positionStrategy: PositionStrategy;\n  /** 強調顏色的索引值 */\n  activeIndex: number;\n}\n\nexport const DefaultTooltipConfig: TooltipConfig = {\n  title: '',\n  element: document.body,\n  rect: new DOMRect(),\n  colorsArray: [[{ color: 'black', opacity: 1 }]],\n  data: [],\n  positionStrategy: {\n    x: PositionXType.center,\n    y: PositionYType.top,\n  },\n  activeIndex: 0\n};\n","import { Color } from '../../config/color.config';\nimport { deepCopy } from '../../function/common.function';\nimport { BasicFactory } from '../basic-factory';\nimport { PositionStrategy } from './position-strategy.function';\nimport { DefaultTooltipConfig, TooltipConfig } from './tooltip.config';\n\nexport abstract class TooltipFactory<T> extends BasicFactory<\n  TooltipFactory<T>\n> {\n  protected tooltip!: d3.Selection<HTMLDivElement, unknown, HTMLElement, any>;\n  protected tooltipConfig: TooltipConfig = deepCopy(DefaultTooltipConfig);\n\n  abstract setData(d: any): T;\n\n  /** 設定 tooltip 標題 */\n  setTitle(title: string): T {\n    this.tooltipConfig.title = title;\n    return this as unknown as T;\n  }\n\n  /** 設定顯示要黏住哪個元素 */\n  setElement(element: Element): T {\n    this.tooltipConfig.element = element;\n    this.tooltipConfig.rect = element.getBoundingClientRect();\n    return this as unknown as T;\n  }\n\n  /** 設定資料顯示顏色陣列 */\n  setColor(colorsArray: Color[][]): T {\n    this.tooltipConfig.colorsArray = colorsArray;\n    return this as unknown as T;\n  }\n\n  /** 設定顯示策略 */\n  setPositionStrategy(positionStrategy: PositionStrategy): T {\n    this.tooltipConfig.positionStrategy = positionStrategy;\n    return this as unknown as T;\n  }\n\n  clear(): void {\n    this.tooltip.remove();\n  }\n}\n","import {\n  Position,\n  PositionX,\n  PositionXType,\n  PositionY,\n  PositionYType,\n} from '../../interface/position.interface';\n\n/**\n * @param x  \"left\" | \"center\" | \"right\"\n * @param y  \"center\" | \"top\" | \"bottom\"\n */\nexport interface PositionStrategy {\n  x: PositionX;\n  y: PositionY;\n}\n\n/** 計算並返回 position */\nexport function calculatePosition(\n  origin: Element,\n  overlay: Element | null,\n  strategy: PositionStrategy = {\n    x: PositionXType.center,\n    y: PositionYType.top,\n  },\n  marginOfOrigin: Position = { x: 8, y: 8 },\n  paddingOfBody: Position = { x: 8, y: 8 }\n): Position {\n  let position: Position = { x: 0, y: 0 };\n  if (!overlay) return position;\n\n  const originRect = origin.getBoundingClientRect();\n  const overlayRect = overlay.getBoundingClientRect();\n  const bodyRect = document.body.getBoundingClientRect();\n\n  position.x = calculatePositionX(\n    strategy,\n    originRect,\n    overlayRect,\n    bodyRect,\n    marginOfOrigin,\n    paddingOfBody\n  );\n  position.y = calculatePositionY(\n    strategy,\n    originRect,\n    overlayRect,\n    bodyRect,\n    marginOfOrigin,\n    paddingOfBody\n  );\n\n  return position;\n}\n\nfunction calculatePositionX(\n  strategy: PositionStrategy,\n  originRect: DOMRect,\n  overlayRect: DOMRect,\n  bodyRect: DOMRect,\n  marginOfOrigin: Position,\n  paddingOfBody: Position\n): number {\n  let value = 0;\n  switch (strategy.x) {\n    case PositionXType.left:\n      value = originRect.x - overlayRect.width - marginOfOrigin.x;\n      break;\n    case PositionXType.center:\n      value = originRect.x + originRect.width / 2 - overlayRect.width / 2;\n      break;\n    case PositionXType.right:\n      value = originRect.x + originRect.width + marginOfOrigin.x;\n  }\n\n  // 切到邊緣時更換顯示位置，center只有偏移超出範圍，left or right 會更改定位模式(left to right 或 right to left)\n  if (value < bodyRect.left + paddingOfBody.x) {\n    value =\n      strategy.x == PositionXType.center\n        ? bodyRect.left + paddingOfBody.x\n        : originRect.x + originRect.width + marginOfOrigin.x;\n  } else if (value + overlayRect.width > window.innerWidth) {\n    value =\n      strategy.x == PositionXType.center\n        ? window.innerWidth - overlayRect.width - paddingOfBody.x\n        : originRect.x - overlayRect.width - marginOfOrigin.x;\n  }\n\n  // const scrollbarWidth = window.innerWidth - document.documentElement.clientWidth;\n  return value + window.scrollX ;\n}\n\nfunction calculatePositionY(\n  strategy: PositionStrategy,\n  originRect: DOMRect,\n  overlayRect: DOMRect,\n  bodyRect: DOMRect,\n  marginOfOrigin: Position,\n  paddingOfBody: Position\n): number {\n  let value = 0;\n  switch (strategy.y) {\n    case PositionYType.top:\n      value = originRect.y - overlayRect.height - marginOfOrigin.y;\n      break;\n    case PositionYType.center:\n      value = originRect.y + originRect.height / 2 - overlayRect.height / 2;\n      break;\n    case PositionYType.bottom:\n      value = originRect.y + originRect.height + marginOfOrigin.y;\n  }\n\n  // 切到邊緣時更換顯示位置，center只有偏移超出範圍，top or bottom 會更改定位模式(top to bottom 或 bottom to top)\n  if (value < bodyRect.top + paddingOfBody.y) {\n    value =\n      strategy.y == PositionYType.center\n        ? bodyRect.top + paddingOfBody.y\n        : originRect.y + originRect.height + marginOfOrigin.y;\n  } else if (value + overlayRect.height > window.innerHeight) {\n    value =\n      strategy.y == PositionYType.center\n        ? window.innerHeight - overlayRect.height - paddingOfBody.y\n        : originRect.y - overlayRect.height - marginOfOrigin.y;\n  }\n  // const scrollbarHeight = window.innerHeight - document.documentElement.clientHeight;\n  return value + window.scrollY ;\n}\n","import * as d3 from 'd3';\nimport { Data } from '../../interface/common.interface';\nimport { TooltipFactory } from './tooltip-factory';\nimport { calculatePosition } from './position-strategy.function';\nimport { getCssColor } from '../../function/color.function';\nimport { TooltipConfig } from './tooltip.config';\nimport { Direction } from '../../enum/enum';\n\nexport class BasicTooltipFactory extends TooltipFactory<BasicTooltipFactory> {\n  setData(d: Data[]): BasicTooltipFactory {\n    this.tooltipConfig.data = d;\n    return this;\n  }\n\n  setConfig(tooltipConfig: Partial<TooltipConfig>): TooltipFactory<BasicTooltipFactory> {\n    Object.assign(this.tooltipConfig, tooltipConfig);\n    return this;\n  }\n\n  getSelector(): string {\n    return ``;\n  }\n\n  getConfig(): TooltipConfig {\n    return this.tooltipConfig;\n  }\n\n  draw(): void {\n    const that = this;\n    this.tooltip = d3\n      .select('body')\n      .append('div')\n      .attr('class', 'd3-tooltip')\n      .style('display', 'flex')\n      .style('flex-direction', 'column')\n      .style('gap', '4px')\n      .style('background', '#686868')\n      .style('width', 'fit-content')\n      .style('padding', '8px')\n      .style('border-radius', '4px')\n      .style('color', '#bebebe')\n      .style('position', 'absolute')\n      .style('top', `0px`)\n      .style('left', `0px`)\n      .style('pointer-events', 'none')\n      .style('z-index', 9999)\n      .style('opacity', 0)\n      .call((selection) =>\n        selection.transition().duration(300).style('opacity', 1)\n      );\n\n    for (const [i, data] of that.tooltipConfig.data.entries()) {\n      const content = this.tooltip\n        .append('div')\n        .attr('class', 'd3-content')\n        .style('display', 'flex')\n        .style('align-items', 'center')\n        .style('gap', '8px');\n\n      content\n        .append('div')\n        .attr('class', 'd3-data-color')\n        .style('width', '6px')\n        .style('height', '18px')\n        .style('border-radius', '9999px')\n        .style(\n          'background',\n          getCssColor(that.tooltipConfig.colorsArray[i], Direction.vertical)\n        );\n\n      const text = content\n        .append('span')\n        .attr('class', 'd3-data-text')\n        .style('font-size', '14px')\n        .style('user-select', 'none')\n        .text(`${data.key}: ${data.value}`);\n\n      if (that.tooltipConfig.activeIndex == i) {\n        text.style('color', 'white');\n      }\n    }\n\n    const position = calculatePosition(\n      that.tooltipConfig.element,\n      this.tooltip.node(),\n      that.tooltipConfig.positionStrategy\n    );\n    this.tooltip\n      .style('top', 0)\n      .style('left', 0)\n      .style('transform', `translate(${position.x}px, ${position.y}px)`);\n  }\n}\n","import { DefaultAxisLabel, FontConfig } from \"../../../../config/font.config\";\n\nexport interface DotConfig {\n  /** 圓點半徑 */\n  radius: number;\n  /** hover 時顯示預設 tooltip */\n  showTooltip: boolean;\n  /** 設定要顯示的點的索引值 */\n  showDotIndexes: boolean[];\n  /** 是否顯示數值標籤在 dot 上 */\n  showValueLabel: boolean;\n  /** 數值標籤文字樣式設定 */\n  valueLabelFontSetting: FontConfig;\n}\n\nexport const DefaultDotConfig: DotConfig = {\n  radius: 5,\n  showTooltip: true,\n  showDotIndexes: [],\n  showValueLabel: false,\n  valueLabelFontSetting: DefaultAxisLabel\n};\n","import * as d3 from 'd3';\nimport { Observable, Subject } from 'rxjs';\nimport { Color } from '../../../../config/color.config';\nimport { FontConfig } from '../../../../config/font.config';\nimport { Direction } from '../../../../enum/enum';\nimport { getColorTypeArray, getSelectionColor } from '../../../../function/color.function';\nimport { deepCopy, getTextRect } from '../../../../function/common.function';\nimport { Data, DataSetWithDataArray } from '../../../../interface/common.interface';\nimport { BasicFactory } from '../../../basic-factory';\nimport { BasicTooltipFactory } from '../../../tooltip/basic-tooltip-factory';\nimport { TooltipFactory } from '../../../tooltip/tooltip-factory';\nimport { LineFactory } from '../line-factory/line-factory';\nimport { GridConfig } from './../../grid/grid.config';\nimport { DefaultDotConfig, DotConfig } from './dot.config';\n\n/** 圓點組件，需繪製在 LineFactory 上 */\nexport class DotFactory extends BasicFactory<DotFactory> {\n  private dotConfig: DotConfig = deepCopy(DefaultDotConfig);\n  private dataColorArray: Color[][] = [];\n  private showDotIndexes!: boolean[]; // 紀錄是否被設定過 showDotIndexes，若沒有則預設為DataSetWithDataArrays長度的true陣列\n  private gridConfig: GridConfig;\n  private pointerover$: Subject<any> = new Subject();\n  private pointerout$: Subject<any> = new Subject();\n\n  constructor(\n    private lineFactory: LineFactory,\n    private tooltipFactory: TooltipFactory<any> = new BasicTooltipFactory()\n  ) {\n    super();\n    this.setLineFactory(lineFactory);\n    this.gridConfig = this.lineFactory.getGridConfig();\n  }\n\n  /** 游標 hover 事件 */\n  onPointerover(): Observable<any> {\n    return this.pointerover$.asObservable();\n  }\n\n  /** 游標離開事件 */\n  onPointerout(): Observable<any> {\n    return this.pointerout$.asObservable();\n  }\n\n  setConfig(dotConfig: Partial<DotConfig>): DotFactory {\n    Object.assign(this.dotConfig, dotConfig);\n    return this;\n  }\n\n  /** 設定圓點半徑 */\n  setRadius(radius: number): DotFactory {\n    this.dotConfig.radius = radius;\n    return this;\n  }\n\n  /** 設定是否顯示預設 tooltip */\n  setShowTooltip(showTooltip: boolean): DotFactory {\n    this.dotConfig.showTooltip = showTooltip;\n    return this;\n  }\n\n  /** 設定要顯示的點的索引值 */\n  setShowDotIndexes(showDotIndexes: boolean[]): DotFactory {\n    this.showDotIndexes = showDotIndexes;\n    this.dotConfig.showDotIndexes = showDotIndexes;\n    return this;\n  }\n\n  /** 設定要顯示的 tooltip 種類 */\n  setTooltipFactory(tooltipFactory: BasicTooltipFactory): DotFactory {\n    this.tooltipFactory = tooltipFactory;\n    return this;\n  }\n\n  /** 設定要繪製在哪個 LineFactory 上 */\n  setLineFactory(lineFactory: LineFactory): DotFactory {\n    this.lineFactory = lineFactory;\n    const dataSetWithDataArrays = this.lineFactory.getDataSetWithDataArrays();\n    this.dataColorArray = getColorTypeArray(dataSetWithDataArrays);\n    this.dotConfig.showDotIndexes = this.showDotIndexes || dataSetWithDataArrays[0]?.data.map(() => true);\n    return this;\n  }\n\n  /** 設定是否顯示數值標籤 */\n  setShowValueLabel(showValueLabel: boolean): DotFactory {\n    this.dotConfig.showValueLabel = showValueLabel;\n    return this;\n  }\n\n  /** 設定數值標籤文字樣式 */\n  setValueLabelFont(valueLabelFontSetting: Partial<FontConfig>): DotFactory {\n    Object.assign(this.dotConfig.valueLabelFontSetting, valueLabelFontSetting);\n    return this;\n  }\n\n  getSelector(): string {\n    return `g#dot_${this.factoryId}`;\n  }\n\n  getConfig(): DotConfig {\n    return this.dotConfig;\n  }\n\n  draw(useAnimation: boolean = false): void {\n    const that = this;\n    const isVertical = that.gridConfig.direction == Direction.vertical;\n\n    this.lineFactory.getLineGroup().each(function (this: d3.BaseType, dSets: DataSetWithDataArray, i: number) {\n      if (d3.select(`#dotFactory_${that.factoryId}_${i}`).empty()) {\n        d3.select(this)\n          .append('g')\n          .attr('id', () => `dotFactory_${that.factoryId}_${i}`);\n        d3.select(this)\n          .append('g')\n          .attr('id', () => `dot_valueLabel_group_${that.factoryId}_${i}`);\n      }\n      const dArray = dSets.data;\n      const color = getSelectionColor(d3.select(this), that.dataColorArray[i], `dot_${that.factoryId}`, i);\n      const setValueLabel = (selection: d3.Selection<any, Data, d3.BaseType, unknown>, j: number) => {\n        if (!that.dotConfig.showValueLabel) return;\n        if (that.dotConfig.showDotIndexes[j] && dArray[j].value !== null) {\n          const parent = d3.select(`#dot_valueLabel_group_${that.factoryId}_${i}`);\n          const id = `${that.factoryId}_${i}_${j}`;\n\n          let textSelection: d3.Selection<any, unknown, HTMLElement, any> = parent.select(`#dot_valueLabel_${id}`);\n\n          if (textSelection.empty()) {\n            textSelection = parent.append('text').attr('id', `dot_valueLabel_${id}`);\n          }\n\n          const dataValueNumber = Number(dArray[j].value);\n          const labelRect = getTextRect(\n            dataValueNumber.toString(),\n            that.dotConfig.valueLabelFontSetting['font-family'],\n            that.dotConfig.valueLabelFontSetting['font-size'],\n            that.dotConfig.valueLabelFontSetting['font-weight']\n          );\n          const gap = 8;\n          const deltaX = isVertical ? -labelRect.width / 2 : dataValueNumber >= 0 ? gap : -labelRect.width;\n          const deltaY = isVertical ? (dataValueNumber >= 0 ? -gap : labelRect.height) : labelRect.height / 2 - gap;\n\n          textSelection\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .attr('x', () => that.lineFactory.getXPosition(dArray[j]) + deltaX)\n            .attr('y', () => that.lineFactory.getYPosition(dArray[j]) + deltaY)\n            .attr('fill', that.dotConfig.valueLabelFontSetting.color)\n            .attr('font-family', that.dotConfig.valueLabelFontSetting['font-family'])\n            .attr('font-size', that.dotConfig.valueLabelFontSetting['font-size'])\n            .attr('font-weight', that.dotConfig.valueLabelFontSetting['font-weight'])\n            .text(dataValueNumber);\n        }\n      };\n      const setAttributes = (selection: d3.Selection<any, Data, d3.BaseType, unknown>, j: number) => {\n        if (that.dotConfig.showDotIndexes[j] && dArray[j].value !== null) {\n          selection\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .attr('cx', (d: Data) => that.lineFactory.getXPosition(d))\n            .attr('cy', (d: Data) => that.lineFactory.getYPosition(d))\n            .attr('r', that.dotConfig.radius)\n            .attr('fill', color);\n        }\n      };\n      const setEvents = (selection: d3.Selection<any, Data, d3.BaseType, unknown>) => {\n        selection\n          .on('pointerover', function (event: PointerEvent, d: Data) {\n            d3.select(this)\n              .transition()\n              .duration(300)\n              .ease(d3.easeCubicInOut)\n              .attr('r', that.dotConfig.radius * 1.5);\n            const element = event.currentTarget as HTMLElement;\n            that.pointerover$.next(d);\n            if (!that.dotConfig.showTooltip) return;\n            that.tooltipFactory.setElement(element).setColor([that.dataColorArray[i]]).setData([d]).draw();\n          })\n          .on('pointermove', function (event: PointerEvent) {\n            d3.select(this).dispatch('grid-hover', event);\n          })\n          .on('pointerout', function (event: PointerEvent, d: Data) {\n            d3.select(this).transition().duration(300).attr('r', that.dotConfig.radius);\n            that.pointerout$.next(d);\n            if (!that.dotConfig.showTooltip) return;\n            that.tooltipFactory.clear();\n          });\n      };\n\n      const dataLength = dArray.length;\n      d3.select(`#dotFactory_${that.factoryId}_${i}`)\n        .selectAll('circle')\n        .data(dArray)\n        .join(\n          enter =>\n            enter\n              .append('circle')\n              .attr('id', (d, j) => `dot_${that.factoryId}_${i}_${j}`)\n              .call(selection =>\n                selection.each((d, i, node) => {\n                  setAttributes(d3.select(node[i]), i);\n                  setValueLabel(d3.select(node[i]), i);\n                })\n              )\n              .call(setEvents)\n              .style('opacity', 0)\n              .call(enter =>\n                enter\n                  .transition('delayDot')\n                  .delay((d, i) => (useAnimation ? (i * 500) / dataLength : 0))\n                  .duration(useAnimation ? 800 : 0)\n                  .style('opacity', 1)\n              ),\n          update =>\n            update.call(update => {\n              update\n                .transition()\n                .duration(useAnimation ? 500 : 0)\n                .call(selection =>\n                  selection.each((d, i, node) => {\n                    if (d.value !== null) {\n                      setAttributes(d3.select(node[i]), i);\n                      setValueLabel(d3.select(node[i]), i);\n                    } else {\n                      selection.remove();\n                    }\n                  })\n                );\n              update.call(setEvents);\n            }),\n          exit => exit.call(exit => exit.transition().duration(500).style('opacity', 0)).remove()\n        );\n    });\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.lineFactory\n      .getLineGroup()\n      ?.selectAll('circle')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n}\n","import { LineAnimationType } from \"./line-factory\";\nimport { CurveType } from \"../../../../enum/curve.enum\";\nexport interface LineConfig {\n  /** 顯示在第幾個 value 軸 */\n  axisIndex: number;\n  /** 折線寬度 */\n  strokeWidth: number,\n  /** 曲線型別 */\n  curveType: CurveType,\n  /** 動畫種類 */\n  enterAnimationType: LineAnimationType;\n}\n\nexport const DefaultLineConfig: LineConfig = {\n  axisIndex: 0,\n  strokeWidth: 2,\n  curveType: 0,\n  enterAnimationType: 0\n}\n","import * as d3 from 'd3';\nimport { Color } from '../../../../config/color.config';\nimport { Direction } from '../../../../enum/enum';\nimport { getColorTypeArray, getSelectionColor } from '../../../../function/color.function';\nimport { deepCopy, getRandomId } from '../../../../function/common.function';\nimport { Data, DataSetWithDataArray } from '../../../../interface/common.interface';\nimport { BasicFactory } from '../../../basic-factory';\nimport { GridFactory } from '../../grid/grid-factory';\nimport { GridConfig } from '../../grid/grid.config';\nimport { GridState } from '../../grid/grid.state';\nimport { DefaultLineConfig, LineConfig } from './line.config';\nimport { CurveType } from '../../../../enum/curve.enum';\n\n/** 折線組件，需繪製在 GridFactory 上 */\nexport class LineFactory extends BasicFactory<LineFactory> {\n  private gridFactory: GridFactory;\n  private gridState: GridState;\n  private gridConfig: GridConfig;\n  private dataSetWithDataArrays: DataSetWithDataArray[] = [];\n  private dataColorArray: Color[][] = [];\n  private lineArrayGroup: d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  private lineGroup!: d3.Selection<SVGElement | SVGGElement, DataSetWithDataArray, d3.BaseType, any>;\n  private lineConfig: LineConfig = deepCopy(DefaultLineConfig);\n\n  constructor(gridFactory: GridFactory) {\n    super();\n    this.gridFactory = gridFactory;\n    this.gridState = gridFactory.getState();\n    this.gridConfig = gridFactory.getConfig();\n    this.lineArrayGroup = (\n      this.gridState.gridGroup.select(`g#lineFactory_${this.factoryId}`).node()\n        ? this.gridState.gridGroup.select(`g#lineFactory_${this.factoryId}`)\n        : this.gridState.gridGroup.append('g').attr('id', `lineFactory_${this.factoryId}`)\n    ) as d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  }\n\n  /** 設定要被繪製在哪個 GridFactory 上 */\n  setGridFactory(gridFactory: GridFactory): LineFactory {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定折線資料 */\n  setDataSets(dataSetWithDataArrays: DataSetWithDataArray[], axisIndex: number = 0): LineFactory {\n    this.dataSetWithDataArrays = dataSetWithDataArrays;\n    this.lineConfig.axisIndex = axisIndex;\n    this.dataColorArray = getColorTypeArray(this.dataSetWithDataArrays);\n    return this;\n  }\n\n  setConfig(lineConfig: Partial<LineConfig>): LineFactory {\n    Object.assign(this.lineConfig, lineConfig);\n    return this;\n  }\n\n  /** 設定折線粗細 */\n  setStrokeWidth(width: number): LineFactory {\n    this.lineConfig.strokeWidth = width;\n    return this;\n  }\n\n  /** 設定曲線模式 */\n  setCurveType(curveType: CurveType): LineFactory {\n    this.lineConfig.curveType = curveType;\n    return this;\n  }\n\n  /** 設定折線繪製時的動畫 */\n  setEnterAnimation(enterAnimationType: LineAnimationType): LineFactory {\n    this.lineConfig.enterAnimationType = enterAnimationType;\n    return this;\n  }\n\n  /** 取得線段中資料點的 x 座標 */\n  getXPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataX = (isVertical ? d.key : d.value) as {\n      valueOf(): number;\n    } & string;\n\n    if (this.lineConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.xGridlineBottom(dataX) || 0;\n      } else {\n        return this.gridState.x(dataX) || 0;\n      }\n    } else {\n      if (isVertical) {\n        return this.gridState.xGridlineBottom(dataX) || 0;\n      } else {\n        return this.gridState.xTop(dataX) || 0;\n      }\n    }\n  }\n\n  /** 取的線段中資料點的 y 座標 */\n  getYPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataY = (isVertical ? d.value : d.key) as {\n      valueOf(): number;\n    } & string;\n    if (this.lineConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.y(dataY) || 0;\n      } else {\n        return this.gridState.yGridlineLeft(dataY) || 0;\n      }\n    } else {\n      if (isVertical) {\n        return this.gridState.yRight(dataY) || 0;\n      } else {\n        return this.gridState.yGridlineLeft(dataY) || 0;\n      }\n    }\n  }\n\n  getLineGroup(): d3.Selection<SVGElement | SVGGElement, DataSetWithDataArray, d3.BaseType, any> {\n    return this.lineGroup;\n  }\n\n  getSelector(): string {\n    return `g#lineFactory_${this.factoryId}`;\n  }\n\n  getConfig(): LineConfig {\n    return this.lineConfig;\n  }\n\n  /** 取得 GridConfig */\n  getGridConfig(): GridConfig {\n    return this.gridConfig;\n  }\n\n  /** 取得 GridState */\n  getState(): GridState {\n    return this.gridState;\n  }\n\n  /** 取得折線資料 */\n  getDataSetWithDataArrays(): DataSetWithDataArray[] {\n    return this.dataSetWithDataArrays;\n  }\n\n  draw(useAnimation: boolean = false): void {\n    this.gridState = this.gridFactory.getState();\n    this.gridConfig = this.gridFactory.getConfig();\n    // 資料缺失時補上null\n    this.dataSetWithDataArrays.forEach(dataset => {\n      // 將 dataset 的 data 轉為 Map 來方便檢查是否存在某 key\n      const dataMap = new Map(dataset.data.map(item => [item.key, item]));\n      // 生成新的 data 陣列，按照 allKeys 的順序補全缺失的 key\n      dataset.data = this.gridState.keyScaleLabels.map(key => {\n        if (dataMap.has(key)) {\n          // 如果 key 存在，返回對應的 DataItem\n          return dataMap.get(key)!;\n        } else {\n          // 如果 key 缺失，插入 { key: 缺失的 key, value: null }\n          return { key, value: null };\n        }\n      });\n    });\n\n    const line = d3\n      .line<Data>()\n      .x(d => this.getXPosition(d))\n      .y(d => this.getYPosition(d))\n      .defined((d, i) => d.value !== null);\n\n    const translate =\n      this.gridConfig.direction == Direction.vertical\n        ? `translateX(${(this.gridState.xGridlineBottom as any).bandwidth() / 2}px)`\n        : `translateY(${(this.gridState.yGridlineLeft as any).bandwidth() / 2}px)`;\n    this.lineArrayGroup\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('transform', translate);\n\n    this.lineGroup = this.lineArrayGroup\n      .selectAll<SVGElement, DataSetWithDataArray>('g.lineGroup')\n      .data<DataSetWithDataArray>(this.dataSetWithDataArrays, d => d.label)\n      .join(\n        enter =>\n          enter\n            .append('g')\n            .attr('class', `lineGroup`)\n            .attr('id', (d, i) => `lineGroup_${this.factoryId}_${i}`),\n        update => update,\n        exit =>\n          exit\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .style('opacity', 0)\n            .remove()\n      );\n\n    const enterAnimation = this.getAnimation;\n    const that = this;\n    this.lineGroup.each(function (this: d3.BaseType, dsets: DataSetWithDataArray, i: number) {\n      const setAttributes = (selection: any) => {\n        selection\n          .attr('d', line)\n          .attr('fill', 'none')\n          .attr('stroke', (d: DataSetWithDataArray, j: number) =>\n            getSelectionColor(d3.select(this), that.dataColorArray[i], `line_${that.factoryId}`, j)\n          )\n          .attr('stroke-width', that.lineConfig.strokeWidth);\n      };\n\n      d3.select(this)\n        .selectAll('path')\n        .data([dsets.data])\n        .join(\n          enter =>\n            enter\n              .append('path')\n              .attr('id', `line_${that.factoryId}_${i}`)\n              .call(setAttributes)\n              .call(enterAnimation.bind(that)),\n          update =>\n            update\n              .transition()\n              .duration(useAnimation ? 500 : 0)\n              .call(setAttributes),\n          exit => exit.remove()\n        );\n    });\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.lineArrayGroup\n      .selectAll('path')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n\n  /** 判斷使用哪種動畫 */\n  private getAnimation(selection: d3.Selection<SVGPathElement, Data[], any, unknown>) {\n    switch (this.lineConfig.enterAnimationType) {\n      case LineAnimationType.startToEnd:\n        return this.animateStartToEnd(selection);\n      case LineAnimationType.fadeIn:\n        return this.animateFadeIn(selection);\n      case LineAnimationType.none:\n      default:\n        return selection;\n    }\n  }\n\n  /** line 動畫 從頭畫到尾 */\n  private animateStartToEnd(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection\n      .attr('stroke-dasharray', function () {\n        return `${this.getTotalLength()} ${this.getTotalLength()}`;\n      })\n      .attr('stroke-dashoffset', function () {\n        return this.getTotalLength();\n      })\n      .call(selection => {\n        selection\n          .transition('animateStartToEnd')\n          .duration(500)\n          .attr('stroke-dashoffset', 0)\n          .on('end', function () {\n            d3.select(this).attr('stroke-dasharray', 'none');\n          });\n      });\n  }\n\n  /** line 動畫 淡入 */\n  private animateFadeIn(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection.attr('opacity', 0).call(selection => selection.transition().duration(500).attr('opacity', 1));\n  }\n}\n\n/** LineFactory 的動畫種類 */\nexport enum LineAnimationType {\n  none = 0,\n  startToEnd = 1,\n  fadeIn = 2\n}\n","import { GridFactory } from '../../factory/grid/grid/grid-factory';\nimport { GridlineFactory } from '../../factory/grid/gridline/gridline-factory';\nimport { DotFactory } from '../../factory/grid/line/dot-factory/dot-factory';\nimport { LineFactory } from '../../factory/grid/line/line-factory/line-factory';\nimport { DataSetWithDataArray } from '../../interface/common.interface';\nimport { RootChart } from '../root-chart';\n\n/** 基礎折線圖 */\nexport class LineChart extends RootChart {\n  private gridFactory: GridFactory;\n  private gridlineFactory!: GridlineFactory;\n  private lineFactory!: LineFactory;\n  private dotFactory!: DotFactory;\n\n  private lineDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private isUseGridlineFactory: boolean = true;\n  private isUseLineFactory: boolean = true;\n  private isUseDotFactory: boolean = true;\n\n  constructor(selector: string) {\n    super(selector);\n    this.gridFactory = new GridFactory(this);\n    this.setFactory();\n  }\n\n  protected setFactory() {\n    this.gridlineFactory = this.gridlineFactory\n      ? this.gridlineFactory.setGridFactory(this.gridFactory)\n      : new GridlineFactory(this.gridFactory);\n\n    this.lineFactory = this.lineFactory\n      ? this.lineFactory.setGridFactory(this.gridFactory)\n      : new LineFactory(this.gridFactory);\n\n    this.lineFactory.setDataSets(this.lineDataSetWithDataArray);\n\n    this.dotFactory = this.dotFactory\n      ? this.dotFactory.setLineFactory(this.lineFactory)\n      : new DotFactory(this.lineFactory);\n  }\n\n  /** 設定資料 */\n  setDataSets(dataSets: DataSetWithDataArray[]): LineChart {\n    this.lineDataSetWithDataArray = dataSets;\n    const gridDataSetting = this.lineDataSetWithDataArray.map((item) => {\n      return { dataSetWithDataArray: item, isStack: false, axisIndex: 0 };\n    });\n    this.gridFactory.setDataSetWithDataArrays(gridDataSetting);\n    return this;\n  }\n\n  /** 設定要使用的 GridFactory */\n  setGridFactory(gridFactory: GridFactory): LineChart {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定要使用的 GridlineFactory */\n  setGridlineFactory(gridlineFactory: GridlineFactory): LineChart {\n    this.gridlineFactory = gridlineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 LineFactory */\n  setLineFactory(lineFactory: LineFactory): LineChart {\n    this.lineFactory = lineFactory;\n    return this;\n  }\n\n  getGridFactory(): GridFactory {\n    return this.gridFactory;\n  }\n\n  getGridlineFactory(): GridlineFactory {\n    return this.gridlineFactory;\n  }\n\n  getLineFactory(): LineFactory {\n    return this.lineFactory;\n  }\n\n  getDotFactory(): DotFactory {\n    return this.dotFactory;\n  }\n\n  useGridlineFactory(isUseGridlineFactory: boolean): LineChart {\n    this.isUseGridlineFactory = isUseGridlineFactory;\n    return this;\n  }\n\n  useLineFactory(isUseLineFactory: boolean): LineChart {\n    this.isUseLineFactory = isUseLineFactory;\n    return this;\n  }\n\n  useDotFactory(isUseDotFactory: boolean): LineChart {\n    this.isUseDotFactory = isUseDotFactory;\n    return this;\n  }\n\n  drawChart(useAnimation: boolean = false) {\n    this.gridFactory.draw(useAnimation);\n    this.setFactory();\n\n    setTimeout(() => {\n      this.isUseGridlineFactory\n        ? this.gridlineFactory.draw(useAnimation)\n        : this.gridlineFactory.clear(useAnimation);\n\n      this.isUseLineFactory\n        ? this.lineFactory.draw(useAnimation)\n        : this.lineFactory.clear(useAnimation);\n\n      this.isUseDotFactory\n        ? this.dotFactory.draw(useAnimation)\n        : this.dotFactory.clear(useAnimation);\n    }, 0);\n  }\n}\n","export enum CurveType {\n  linear = 0,\n  smooth = 1,\n  pulse = 2\n}\n","import { AreaAnimationType } from \"./area-factory\";\nimport { CurveType } from \"../../../../enum/curve.enum\";\n\nexport interface AreaConfig {\n  /** 顯示在第幾個 value 軸 */\n  axisIndex: number;\n  /** 曲線型別 */\n  curveType: CurveType,\n  /** 動畫種類 */\n  enterAnimationType: AreaAnimationType;\n}\n\nexport const DefaultAreaConfig: AreaConfig = {\n  axisIndex: 0,\n  curveType: 0,\n  enterAnimationType: 0\n}\n","import * as d3 from 'd3';\nimport { Color } from '../../../../config/color.config';\nimport { Direction } from '../../../../enum/enum';\nimport { getColorTypeArray, getSelectionColor } from '../../../../function/color.function';\nimport { deepCopy } from '../../../../function/common.function';\nimport { Data, DataSetWithDataArray } from '../../../../interface/common.interface';\nimport { BasicFactory } from '../../../basic-factory';\nimport { GridFactory } from '../../grid/grid-factory';\nimport { GridConfig } from '../../grid/grid.config';\nimport { GridState } from '../../grid/grid.state';\nimport { CurveType } from './../../../../enum/curve.enum';\nimport { AreaConfig, DefaultAreaConfig } from './area.config';\n\n/** 折線組件，需繪製在 GridFactory 上 */\nexport class AreaFactory extends BasicFactory<AreaFactory> {\n  private gridFactory: GridFactory;\n  private gridState: GridState;\n  private gridConfig: GridConfig;\n  private dataSetWithDataArrays: DataSetWithDataArray[] = [];\n  private dataColorArray: Color[][] = [];\n  private areaArrayGroup: d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  private areaGroup!: d3.Selection<SVGElement | SVGGElement, DataSetWithDataArray, d3.BaseType, any>;\n  private areaConfig: AreaConfig = deepCopy(DefaultAreaConfig);\n\n  constructor(gridFactory: GridFactory) {\n    super();\n    this.gridFactory = gridFactory;\n    this.gridState = gridFactory.getState();\n    this.gridConfig = gridFactory.getConfig();\n    this.areaArrayGroup = (\n      this.gridState.gridGroup.select(`g#areaFactory_${this.factoryId}`).node()\n        ? this.gridState.gridGroup.select(`g#areaFactory_${this.factoryId}`)\n        : this.gridState.gridGroup.append('g').attr('id', `areaFactory_${this.factoryId}`)\n    ) as d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  }\n\n  /** 設定要被繪製在哪個 GridFactory 上 */\n  setGridFactory(gridFactory: GridFactory): AreaFactory {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定折線資料 */\n  setDataSets(dataSetWithDataArrays: DataSetWithDataArray[], axisIndex: number = 0): AreaFactory {\n    this.dataSetWithDataArrays = dataSetWithDataArrays;\n    this.areaConfig.axisIndex = axisIndex;\n    this.dataColorArray = getColorTypeArray(this.dataSetWithDataArrays);\n    return this;\n  }\n\n  setConfig(areaConfig: Partial<AreaConfig>): AreaFactory {\n    Object.assign(this.areaConfig, areaConfig);\n    return this;\n  }\n\n  /** 設定曲線模式 */\n  setCurveType(curveType: CurveType): AreaFactory {\n    this.areaConfig.curveType = curveType;\n    return this;\n  }\n\n  /** 設定折線繪製時的動畫 */\n  setEnterAnimation(enterAnimationType: AreaAnimationType): AreaFactory {\n    this.areaConfig.enterAnimationType = enterAnimationType;\n    return this;\n  }\n\n  /** 取得線段中資料點的 x 座標 */\n  getXPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataX = (isVertical ? d.key : d.value) as {\n      valueOf(): number;\n    } & string;\n\n    if (this.areaConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.xGridlineBottom(dataX) || 0;\n      } else {\n        return this.gridState.x(dataX) || 0;\n      }\n    } else {\n      if (isVertical) {\n        return this.gridState.xGridlineBottom(dataX) || 0;\n      } else {\n        return this.gridState.xTop(dataX) || 0;\n      }\n    }\n  }\n\n  /** 取的線段中資料點的 y 座標 */\n  getYPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataY = (isVertical ? d.value : d.key) as {\n      valueOf(): number;\n    } & string;\n    if (this.areaConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.y(dataY) || 0;\n      } else {\n        return this.gridState.yGridlineLeft(dataY) || 0;\n      }\n    } else {\n      if (isVertical) {\n        return this.gridState.yRight(dataY) || 0;\n      } else {\n        return this.gridState.yGridlineLeft(dataY) || 0;\n      }\n    }\n  }\n\n  getLineGroup(): d3.Selection<SVGElement | SVGGElement, DataSetWithDataArray, d3.BaseType, any> {\n    return this.areaGroup;\n  }\n\n  getSelector(): string {\n    return `g#areaFactory_${this.factoryId}`;\n  }\n\n  getConfig(): AreaConfig {\n    return this.areaConfig;\n  }\n\n  /** 取得折線資料 */\n  getDataSetWithDataArrays(): DataSetWithDataArray[] {\n    return this.dataSetWithDataArrays;\n  }\n\n  draw(useAnimation: boolean = false): void {\n    this.gridState = this.gridFactory.getState();\n    this.gridConfig = this.gridFactory.getConfig();\n    // 資料缺失時補上null\n    this.dataSetWithDataArrays.forEach(dataset => {\n      // 將 dataset 的 data 轉為 Map 來方便檢查是否存在某 key\n      const dataMap = new Map(dataset.data.map(item => [item.key, item]));\n      // 生成新的 data 陣列，按照 allKeys 的順序補全缺失的 key\n      dataset.data = this.gridState.keyScaleLabels.map(key => {\n        if (dataMap.has(key)) {\n          // 如果 key 存在，返回對應的 DataItem\n          return dataMap.get(key)!;\n        } else {\n          // 如果 key 缺失，插入 { key: 缺失的 key, value: null }\n          return { key, value: null };\n        }\n      });\n    });\n\n    const curve = (() => {\n      switch (this.areaConfig.curveType) {\n        case CurveType.linear:\n          return d3.curveLinear;\n        case CurveType.smooth:\n          return this.gridConfig.direction == Direction.vertical ? d3.curveBumpX : d3.curveBumpY;\n        case CurveType.pulse:\n          return d3.curveStep;\n      }\n    })();\n\n    const area = d3\n      .area<Data>()\n      .x(d => this.getXPosition(d))\n      .y0(d => this.getYPosition({key: d.key, value: 0}))\n      .y1(d => this.getYPosition(d))\n      .curve(curve)\n      .defined((d, i) => d.value !== null);\n\n    const translate =\n      this.gridConfig.direction == Direction.vertical\n        ? `translateX(${(this.gridState.xGridlineBottom as any).bandwidth() / 2}px)`\n        : `translateY(${(this.gridState.yGridlineLeft as any).bandwidth() / 2}px)`;\n    this.areaArrayGroup\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('transform', translate);\n\n    this.areaGroup = this.areaArrayGroup\n      .selectAll<SVGElement, DataSetWithDataArray>('g.areaGroup')\n      .data<DataSetWithDataArray>(this.dataSetWithDataArrays, d => d.label)\n      .join(\n        enter =>\n          enter\n            .append('g')\n            .attr('class', `areaGroup`)\n            .attr('id', (d, i) => `areaGroup_${this.factoryId}_${i}`),\n        update => update,\n        exit =>\n          exit\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .style('opacity', 0)\n            .remove()\n      );\n\n    const enterAnimation = this.getAnimation;\n    const that = this;\n    this.areaGroup.each(function (this: d3.BaseType, dsets: DataSetWithDataArray, i: number) {\n      const setAttributes = (selection: any) => {\n        selection\n          .attr('d', area)\n          .attr('fill', () =>\n            getSelectionColor(\n              d3.select(this),\n              that.dataColorArray[i],\n              `area_${that.factoryId}`,\n              i,\n              that.dataSetWithDataArrays[i].gradientDirection\n            )\n          );\n      };\n\n      d3.select(this)\n        .selectAll('path')\n        .data([dsets.data])\n        .join(\n          enter => enter.append('path').attr('id', `area_${that.factoryId}_${i}`).call(setAttributes),\n          update =>\n            update\n              .transition()\n              .duration(useAnimation ? 500 : 0)\n              .call(setAttributes),\n          exit => exit.remove()\n        );\n    });\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.areaArrayGroup\n      .selectAll('path')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n\n  /** 判斷使用哪種動畫 */\n  private getAnimation(selection: d3.Selection<SVGPathElement, Data[], any, unknown>) {\n    switch (this.areaConfig.enterAnimationType) {\n      case AreaAnimationType.startToEnd:\n        return this.animateStartToEnd(selection);\n      case AreaAnimationType.fadeIn:\n        return this.animateFadeIn(selection);\n      case AreaAnimationType.none:\n      default:\n        return selection;\n    }\n  }\n\n  /** line 動畫 從頭畫到尾 */\n  private animateStartToEnd(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection\n      .attr('stroke-dasharray', function () {\n        return `${this.getTotalLength()} ${this.getTotalLength()}`;\n      })\n      .attr('stroke-dashoffset', function () {\n        return this.getTotalLength();\n      })\n      .call(selection => {\n        selection\n          .transition('animateStartToEnd')\n          .duration(500)\n          .attr('stroke-dashoffset', 0)\n          .on('end', function () {\n            d3.select(this).attr('stroke-dasharray', 'none');\n          });\n      });\n  }\n\n  /** line 動畫 淡入 */\n  private animateFadeIn(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection.attr('opacity', 0).call(selection => selection.transition().duration(500).attr('opacity', 1));\n  }\n}\n\n/** AreaFactory 的動畫種類 */\nexport enum AreaAnimationType {\n  none = 0,\n  startToEnd = 1,\n  fadeIn = 2\n}\n","import { GridFactory } from '../../factory/grid/grid/grid-factory';\nimport { GridlineFactory } from '../../factory/grid/gridline/gridline-factory';\nimport { AreaFactory } from '../../factory/grid/line/area-factory/area-factory';\nimport { DotFactory } from '../../factory/grid/line/dot-factory/dot-factory';\nimport { LineFactory } from '../../factory/grid/line/line-factory/line-factory';\nimport { DataSetWithDataArray } from '../../interface/common.interface';\nimport { RootChart } from '../root-chart';\n\n/** 基礎區域圖 */\nexport class AreaChart extends RootChart {\n  private gridFactory: GridFactory;\n  private gridlineFactory!: GridlineFactory;\n  private lineFactory!: LineFactory;\n  private dotFactory!: DotFactory;\n  private areaFactory!: AreaFactory;\n\n  private lineDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private areaDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private isUseGridlineFactory: boolean = true;\n  private isUseLineFactory: boolean = true;\n  private isUseDotFactory: boolean = true;\n  private isUseAreaFactory: boolean = true;\n\n  constructor(selector: string) {\n    super(selector);\n    this.gridFactory = new GridFactory(this);\n    this.setFactory();\n  }\n\n  protected setFactory() {\n    this.gridlineFactory = this.gridlineFactory\n      ? this.gridlineFactory.setGridFactory(this.gridFactory)\n      : new GridlineFactory(this.gridFactory);\n\n    this.areaFactory = this.areaFactory\n      ? this.areaFactory.setGridFactory(this.gridFactory)\n      : new AreaFactory(this.gridFactory);\n\n    this.areaFactory.setDataSets(this.areaDataSetWithDataArray);\n\n    this.lineFactory = this.lineFactory\n      ? this.lineFactory.setGridFactory(this.gridFactory)\n      : new LineFactory(this.gridFactory);\n\n    this.lineFactory.setDataSets(this.lineDataSetWithDataArray);\n\n    this.dotFactory = this.dotFactory\n      ? this.dotFactory.setLineFactory(this.lineFactory)\n      : new DotFactory(this.lineFactory);\n  }\n\n  /** 設定折線資料 */\n  setLineDataSets(dataSets: DataSetWithDataArray[]): AreaChart {\n    this.lineDataSetWithDataArray = dataSets;\n    const gridDataSetting = this.lineDataSetWithDataArray.map(item => {\n      return { dataSetWithDataArray: item, isStack: false, axisIndex: 0 };\n    });\n    this.gridFactory.setDataSetWithDataArrays(gridDataSetting);\n    return this;\n  }\n\n  /** 設定區域資料 */\n  setAreaDataSets(dataSets: DataSetWithDataArray[]): AreaChart {\n    this.areaDataSetWithDataArray = dataSets;\n    const gridDataSetting = this.lineDataSetWithDataArray.map(item => {\n      return { dataSetWithDataArray: item, isStack: false, axisIndex: 0 };\n    });\n    this.gridFactory.setDataSetWithDataArrays(gridDataSetting);\n    return this;\n  }\n\n  /** 設定要使用的 GridFactory */\n  setGridFactory(gridFactory: GridFactory): AreaChart {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定要使用的 GridlineFactory */\n  setGridlineFactory(gridlineFactory: GridlineFactory): AreaChart {\n    this.gridlineFactory = gridlineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 LineFactory */\n  setLineFactory(lineFactory: LineFactory): AreaChart {\n    this.lineFactory = lineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 AreaFactory */\n  setAreaFactory(areaFactory: AreaFactory): AreaChart {\n    this.areaFactory = areaFactory;\n    return this;\n  }\n\n  getGridFactory(): GridFactory {\n    return this.gridFactory;\n  }\n\n  getGridlineFactory(): GridlineFactory {\n    return this.gridlineFactory;\n  }\n\n  getLineFactory(): LineFactory {\n    return this.lineFactory;\n  }\n\n  getDotFactory(): DotFactory {\n    return this.dotFactory;\n  }\n\n  getAreaFactory(): AreaFactory {\n    return this.areaFactory;\n  }\n\n  useGridlineFactory(isUseGridlineFactory: boolean): AreaChart {\n    this.isUseGridlineFactory = isUseGridlineFactory;\n    return this;\n  }\n\n  useLineFactory(isUseLineFactory: boolean): AreaChart {\n    this.isUseLineFactory = isUseLineFactory;\n    return this;\n  }\n\n  useDotFactory(isUseDotFactory: boolean): AreaChart {\n    this.isUseDotFactory = isUseDotFactory;\n    return this;\n  }\n\n  useAreaFactory(isUseAreaFactory: boolean): AreaChart {\n    this.isUseAreaFactory = isUseAreaFactory;\n    return this;\n  }\n\n  drawChart(useAnimation: boolean = false) {\n    this.gridFactory.draw(useAnimation);\n    this.setFactory();\n\n    setTimeout(() => {\n      this.isUseGridlineFactory ? this.gridlineFactory.draw(useAnimation) : this.gridlineFactory.clear(useAnimation);\n      this.isUseAreaFactory ? this.areaFactory.draw(useAnimation) : this.areaFactory.clear(useAnimation);\n      this.isUseLineFactory ? this.lineFactory.draw(useAnimation) : this.lineFactory.clear(useAnimation);\n      this.isUseDotFactory ? this.dotFactory.draw(useAnimation) : this.dotFactory.clear(useAnimation);\n    }, 0);\n  }\n}\n","import { DefaultAxisLabel, FontConfig } from \"../../../../config/font.config\";\nimport { BarAnimationType } from \"./bar-factory\";\n\nexport interface BarConfig {\n  /** 顯示在第幾個 value 軸 */\n  axisIndex: number;\n  /** hover 時顯示預設 tooltip */\n  showTooltip: boolean;\n  /** 是否顯示數值標籤在 bar 上 */\n  showValueLabel: boolean;\n  /** 數值標籤是否顯示在 bar 外 */\n  isValueLabelOutside: boolean;\n  /** 數值標籤文字樣式設定 */\n  valueLabelFontSetting: FontConfig;\n  /** 動畫種類 */\n  enterAnimationType: BarAnimationType;\n  /** 是否堆疊，若為否則平行呈現 */\n  isStack: boolean;\n  /** Bar寬度設定，數值介於0~1 */\n  bandwidth: number;\n  /** Bar 的圓角 */\n  borderRadius: number;\n}\n\nexport const DefaultBarConfig: BarConfig = {\n  axisIndex: 0,\n  showTooltip: true,\n  showValueLabel: false,\n  isValueLabelOutside: true,\n  valueLabelFontSetting: DefaultAxisLabel,\n  enterAnimationType: 0,\n  isStack: false,\n  bandwidth: 1,\n  borderRadius: 8,\n}\n","import * as d3 from 'd3';\nimport { Observable, Subject } from 'rxjs';\nimport { Color } from '../../../../config/color.config';\nimport { FontConfig } from '../../../../config/font.config';\nimport { Direction } from '../../../../enum/enum';\nimport { getColorTypeArray, getSelectionColor } from '../../../../function/color.function';\nimport { deepCopy, getRandomId, getTextRect } from '../../../../function/common.function';\nimport { Data, DataSetWithDataArray } from '../../../../interface/common.interface';\nimport { BasicFactory } from '../../../basic-factory';\nimport { BasicTooltipFactory } from '../../../tooltip/basic-tooltip-factory';\nimport { TooltipFactory } from '../../../tooltip/tooltip-factory';\nimport { GridFactory } from '../../grid/grid-factory';\nimport { GridConfig } from '../../grid/grid.config';\nimport { GridState } from '../../grid/grid.state';\nimport { BarConfig, DefaultBarConfig } from './bar.config';\n\nexport interface PointeroverData {\n  key: string | number | undefined;\n  activeIndex: number;\n  data: (Data | undefined)[];\n  elements: Element[];\n  event: PointerEvent;\n}\n\n/** 長條組件，需繪製在 GridFactory 上 */\nexport class BarFactory extends BasicFactory<BarFactory> {\n  private gridFactory: GridFactory;\n  private gridState: GridState;\n  private gridConfig: GridConfig;\n  private dataSetWithDataArrays: DataSetWithDataArray[] = [];\n  private dataColorArray: Color[][] = [];\n  private barArrayGroup: d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  private barGroup!: d3.Selection<d3.BaseType | SVGGElement, any, d3.BaseType, any>;\n  private barConfig: BarConfig = deepCopy(DefaultBarConfig);\n  private pointerover$: Subject<any> = new Subject();\n  private pointerout$: Subject<any> = new Subject();\n\n  constructor(\n    gridFactory: GridFactory,\n    private tooltipFactory: TooltipFactory<any> = new BasicTooltipFactory()\n  ) {\n    super();\n    this.gridFactory = gridFactory;\n    this.gridState = gridFactory.getState();\n    this.gridConfig = gridFactory.getConfig();\n    this.barArrayGroup = (\n      this.gridState.gridGroup.select(`g#barFactory_${this.factoryId}`).node()\n        ? this.gridState.gridGroup.select(`g#barFactory_${this.factoryId}`)\n        : this.gridState.gridGroup.append('g').attr('id', `barFactory_${this.factoryId}`)\n    ) as d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n    this.tooltipFactory.setPositionStrategy({ x: 'right', y: 'center' });\n  }\n\n  /** 設定要被繪製在哪個 GridFactory 上 */\n  setGridFactory(gridFactory: GridFactory): BarFactory {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定長條資料 */\n  setDataSets(dataSetWithDataArrays: DataSetWithDataArray[], axisIndex: number = 0): BarFactory {\n    this.dataSetWithDataArrays = dataSetWithDataArrays;\n    this.barConfig.axisIndex = axisIndex;\n    this.dataColorArray = getColorTypeArray(this.dataSetWithDataArrays);\n    return this;\n  }\n\n  setConfig(barConfig: Partial<BarConfig>): BarFactory {\n    Object.assign(this.barConfig, barConfig);\n    return this;\n  }\n\n  /** 設定長條繪製時的動畫 */\n  setEnterAnimation(enterAnimationType: BarAnimationType): BarFactory {\n    this.barConfig.enterAnimationType = enterAnimationType;\n    return this;\n  }\n\n  /** 設定是否堆疊，若為否則平行呈現 */\n  setStack(isStack: boolean): BarFactory {\n    this.barConfig.isStack = isStack;\n    return this;\n  }\n\n  /** 設定是否顯示數值標籤 */\n  setShowValueLabel(showValueLabel: boolean): BarFactory {\n    this.barConfig.showValueLabel = showValueLabel;\n    return this;\n  }\n\n  /** 設定數值標籤文字樣式 */\n  setValueLabelFont(valueLabelFontSetting: Partial<FontConfig>): BarFactory {\n    Object.assign(this.barConfig.valueLabelFontSetting, valueLabelFontSetting);\n    return this;\n  }\n\n  /** 設定數值標籤顯示的位置 */\n  setIsValueLabelOutside(isValueLabelOutside: boolean): BarFactory {\n    this.barConfig.isValueLabelOutside = isValueLabelOutside;\n    return this;\n  }\n\n  /** 取的線段中資料點的 x 座標 */\n  getXPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataX = (isVertical ? d.key : d.value) as {\n      valueOf(): number;\n    } & string;\n\n    if (this.barConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.xGridlineBottom(dataX) || 0;\n      } else {\n        return this.gridState.x(dataX) || 0;\n      }\n    } else {\n      return this.gridState.xTop(dataX) || 0;\n    }\n  }\n\n  /** 取的線段中資料點的 y 座標 */\n  getYPosition(d: Data): number {\n    const isVertical = this.gridConfig.direction == Direction.vertical;\n    const dataY = ((isVertical ? d.value : d.key) || 0) as {\n      valueOf(): number;\n    } & string;\n\n    if (this.barConfig.axisIndex == 0) {\n      if (isVertical) {\n        return this.gridState.y(dataY) || 0;\n      } else {\n        return this.gridState.yGridlineLeft(dataY) || 0;\n      }\n    } else {\n      return this.gridState.yRight(dataY) || 0;\n    }\n  }\n\n  getSelector(): string {\n    return `g#barFactory_${this.factoryId}`;\n  }\n\n  getConfig(): BarConfig {\n    return this.barConfig;\n  }\n\n  /** 監聽 Pointerover 事件 */\n  onPointerover(): Observable<PointeroverData> {\n    return this.pointerover$.asObservable();\n  }\n\n  /** 監聽 Pointerout 事件 */\n  onPointerout(): Observable<PointerEvent> {\n    return this.pointerout$.asObservable();\n  }\n\n  draw(useAnimation: boolean = false): void {\n    this.gridState = this.gridFactory.getState();\n    this.gridConfig = this.gridFactory.getConfig();\n    const categories = this.dataSetWithDataArrays.length > 0 ? this.dataSetWithDataArrays[0].data.map(d => d.key) : [];\n    const keys = this.dataSetWithDataArrays.map(DataSetWithDataArray => DataSetWithDataArray.label);\n    const stack = d3.stack().keys(keys).offset(d3.stackOffsetDiverging);\n    const stackData: XValueOfBar[] = categories.map((category, i) => {\n      let obj: any = { stackKeyName: category };\n      this.dataSetWithDataArrays.forEach(d => {\n        if (d.data[i]) {\n          obj[d.label] = d.data[i].value;\n        }\n      });\n      return obj;\n    });\n    const gap = 4;\n\n    let positiveSumArray: number[] = [],\n      negetiveSumArray: number[] = [];\n    for (const singleData of stackData) {\n      let positiveSum = 0,\n        negetiveSum = 0;\n      for (const key of Object.keys(singleData)) {\n        if (key == 'stackKeyName') continue;\n        if (singleData[key] > 0) {\n          positiveSum += singleData[key];\n        } else {\n          negetiveSum += singleData[key];\n        }\n      }\n      positiveSumArray.push(positiveSum);\n      negetiveSumArray.push(negetiveSum);\n    }\n\n    // console.log(stackData);\n    // console.log(stack(stackData));\n\n    const groupData = this.barConfig.isStack\n      ? stack(stackData)\n      : (this.dataSetWithDataArrays.map(item => item.data) as any);\n\n    this.barGroup = this.barArrayGroup\n      .selectAll(`g`)\n      .data(groupData)\n      .join(\n        enter => enter.append('g').attr('id', (d, i) => `barGroup_${this.factoryId}_${i}`),\n        update => update,\n        exit =>\n          exit\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .style('opacity', 0)\n            .remove()\n      );\n\n    const that = this;\n    this.barGroup.each(function (this: d3.BaseType, dataArray: any, i: number) {\n      const isVertical = that.gridConfig.direction == Direction.vertical;\n      //#region function\n      // 圓角遮罩\n      const roundedMask = (\n        selection: d3.Selection<any, any, any, any>,\n        index: number,\n        data: any,\n        dataValue: number | string | null,\n        posX: Function,\n        posY: Function,\n        barWidth: number,\n        barHeight: Function\n      ) => {\n        const parent = d3.select(this);\n        const id = `${that.factoryId}_${i}_${index}`;\n        let clipPathRect: d3.Selection<any, unknown, null, undefined> = parent\n          .select(`#bar_clipPath_rounded_${id}`)\n          .select(`#rounded_${id}`)\n          .select('rect');\n        if (clipPathRect.empty()) {\n          clipPathRect = parent\n            .append('defs')\n            .attr('id', `bar_clipPath_rounded_${id}`)\n            .append('clipPath')\n            .attr('id', `rounded_${id}`)\n            .append('rect');\n        }\n\n        const dataValueNumber = Number(dataValue);\n        clipPathRect\n          .transition()\n          .duration(useAnimation ? 500 : 0)\n          .attr('x', () => {\n            return posX(data) - (!isVertical && dataValueNumber >= 0 ? barHeight(data) * 0.5 : 0);\n          })\n          .attr('y', () => (isVertical ? posY(data) - (dataValueNumber < 0 ? barHeight(data) * 0.5 : 0) : posY(data)))\n          .attr('width', () => (isVertical ? barWidth : barHeight(data) * 1.5))\n          .attr('height', () => (isVertical ? barHeight(data) * 1.5 : barWidth))\n          .attr('rx', that.barConfig.borderRadius)\n          .attr('ry', that.barConfig.borderRadius);\n\n        selection.attr('clip-path', () => `url(#rounded_${id})`);\n      };\n\n      // 平行呈現 d3.Selection<any, any, any, any>\n      const setParallelBar = (selection: any) => {\n        //#region ParallelBar attributes\n        const gridBand = isVertical\n          ? (that.gridState.xGridlineBottom as d3.ScaleBand<string>).bandwidth() * that.barConfig.bandwidth\n          : (that.gridState.yGridlineLeft as d3.ScaleBand<string>).bandwidth() * that.barConfig.bandwidth;\n        const barWidth = (gridBand - gap * (groupData.length - 1)) / groupData.length;\n\n        const barHeight = function (d: Data) {\n          return isVertical\n            ? Math.abs(that.getYPosition(d) - that.getYPosition({ key: d.key, value: 0 }))\n            : Math.abs(that.getXPosition(d) - that.getXPosition({ key: d.key, value: 0 }));\n        };\n\n        const posX = function (d: Data) {\n          return isVertical\n            ? that.getXPosition(d) + i * (barWidth + gap)\n            : that.getXPosition({\n                key: d.key,\n                value: Math.max(0, Number(d.value))\n              }) - barHeight(d);\n        };\n\n        const posY = function (d: Data) {\n          return isVertical\n            ? that.getYPosition({\n                key: d.key,\n                value: Math.max(0, Number(d.value))\n              })\n            : that.getYPosition(d) + i * (barWidth + gap);\n        };\n        //#endregion\n\n        selection\n          .attr(\n            'fill',\n            getSelectionColor(\n              d3.select(this),\n              that.dataColorArray[i],\n              `bar_${that.gridState.id}`,\n              i,\n              that.dataSetWithDataArrays[i].gradientDirection\n            )\n          )\n          .attr('x', (d: Data) => posX(d))\n          .attr('y', (d: Data) => posY(d))\n          .attr('width', (d: Data) => (isVertical ? barWidth : barHeight(d)))\n          .attr('height', (d: Data) => (isVertical ? barHeight(d) : barWidth))\n          .call((selection: d3.Selection<any, any, any, any>) => {\n            selection.each(function (this: any, data: Data, index: number) {\n              roundedMask(d3.select(this), index, data, data.value, posX, posY, barWidth, barHeight);\n              if (that.barConfig.showValueLabel) {\n                setValueLabel(index, data, data.value, posX, posY, barWidth, barHeight);\n              }\n            });\n          });\n      };\n\n      const setValueLabel = (\n        index: number,\n        data: any,\n        dataValue: number | string | null,\n        posX: Function,\n        posY: Function,\n        barWidth: number,\n        barHeight: Function\n      ) => {\n        const parent = d3.select(this);\n        const id = `${that.factoryId}_${i}_${index}`;\n\n        let textSelection: d3.Selection<any, unknown, null, undefined> = parent.select(`#bar_valueLabel_${id}`);\n\n        if (textSelection.empty()) {\n          textSelection = parent.append('text').attr('id', `bar_valueLabel_${id}`);\n        }\n\n        const dataValueNumber = Number(dataValue);\n        const labelRect = getTextRect(\n          dataValueNumber.toString(),\n          that.barConfig.valueLabelFontSetting['font-family'],\n          that.barConfig.valueLabelFontSetting['font-size'],\n          that.barConfig.valueLabelFontSetting['font-weight']\n        );\n\n        const gap = 8;\n        const deltaX = isVertical\n          ? barWidth / 2 - labelRect.width / 2\n          : dataValueNumber >= 0\n            ? barHeight(data) + (that.barConfig.isValueLabelOutside ? gap : -labelRect.width - gap)\n            : that.barConfig.isValueLabelOutside ? -labelRect.width - gap : gap;\n\n        // const deltaY = barWidth / 2 + labelRect.height / 2 - gap;\n        const deltaY = isVertical\n        ? dataValueNumber >= 0\n          ? (that.barConfig.isValueLabelOutside ? -gap : labelRect.height )\n          : barHeight(data) + (that.barConfig.isValueLabelOutside ? labelRect.height : -gap )\n        : barWidth / 2 + labelRect.height / 2 - gap;\n\n        textSelection\n          .transition()\n          .duration(useAnimation ? 500 : 0)\n          .attr('x', () => posX(data) + deltaX)\n          .attr('y', () => posY(data) + deltaY)\n          .attr('fill', that.barConfig.valueLabelFontSetting.color)\n          .attr('font-family', that.barConfig.valueLabelFontSetting['font-family'])\n          .attr('font-size', that.barConfig.valueLabelFontSetting['font-size'])\n          .attr('font-weight', that.barConfig.valueLabelFontSetting['font-weight'])\n          .text(dataValueNumber);\n      };\n\n      // 堆疊呈現\n      const setStackBar = (selection: any) => {\n        //#region StackBar attributes\n        const barWidth = isVertical\n          ? (that.gridState.xGridlineBottom as any).bandwidth()\n          : (that.gridState.yGridlineLeft as any).bandwidth();\n\n        const barHeight = function (d: StackDataType) {\n          return isVertical\n            ? Math.abs(\n                that.getYPosition({ key: d.data.stackKeyName, value: d[0] }) -\n                  that.getYPosition({ key: d.data.stackKeyName, value: d[1] })\n              )\n            : Math.abs(\n                that.getXPosition({ key: d.data.stackKeyName, value: d[0] }) -\n                  that.getXPosition({ key: d.data.stackKeyName, value: d[1] })\n              );\n        };\n\n        const posX = function (d: StackDataType) {\n          return isVertical\n            ? that.gridState.xGridlineBottom(d.data.stackKeyName as any) || 0\n            : that.getXPosition({ key: d.data.stackKeyName, value: d[1] }) - barHeight(d);\n        };\n\n        const posY = function (d: StackDataType) {\n          return isVertical\n            ? that.getYPosition({ key: d.data.stackKeyName, value: d[1] })\n            : that.gridState.yGridlineLeft(d.data.stackKeyName as any) || 0;\n        };\n        //#endregion\n\n        selection\n          .attr(\n            'fill',\n            getSelectionColor(\n              d3.select(this),\n              that.dataColorArray[i],\n              `bar_${that.gridState.id}`,\n              i,\n              that.dataSetWithDataArrays[i].gradientDirection\n            )\n          )\n          .attr('x', (d: StackDataType) => posX(d))\n          .attr('y', (d: StackDataType) => posY(d))\n          .attr('width', (d: StackDataType) => (isVertical ? barWidth : barHeight(d)))\n          .attr('height', (d: StackDataType) => (isVertical ? barHeight(d) : barWidth))\n          .call((selection: d3.Selection<any, any, any, any>) => {\n            selection.each(function (this: any, data: StackDataType, index: number) {\n              const key = dataArray.key;\n              if ((data[0] < 0 && data[0] == negetiveSumArray[index]) || data[1] == positiveSumArray[index]) {\n                roundedMask(d3.select(this), index, data, data.data[key], posX, posY, barWidth, barHeight);\n                if (that.barConfig.showValueLabel) {\n                  setValueLabel(index, data, data.data[key], posX, posY, barWidth, barHeight);\n                }\n              }\n\n            });\n          });\n      };\n\n      // 單行提示框\n      const singleTooltip = (selection: d3.Selection<any, any, d3.BaseType, unknown>) => {\n        selection\n          .on('pointerover', function (event: PointerEvent, d: Data) {\n            that.tooltipFactory.setPositionStrategy({\n              x: 'center',\n              y: Number(d.value) > 0 ? 'top' : 'bottom'\n            });\n            const element = event.currentTarget as HTMLElement;\n            const j = that.dataSetWithDataArrays[i].data.findIndex(item => item.key == d.key);\n\n            // 取得所有 barGroup 中相同 index 的 bar\n            let elements: Element[] = [];\n            for (let index = 0; index < that.dataSetWithDataArrays.length; index++) {\n              const el = d3.select(`rect#bar_${that.gridState.id}_${index}_${j}`).node() as Element;\n              elements.push(el);\n            }\n\n            const pointeroverData: PointeroverData = {\n              key: d.key,\n              activeIndex: i,\n              data: that.dataSetWithDataArrays.map(item => item.data[j]),\n              elements: elements,\n              event: event\n            };\n            that.pointerover$.next(pointeroverData);\n\n            if (!that.barConfig.showTooltip) return;\n            that.tooltipFactory.setElement(element).setColor([that.dataColorArray[i]]).setData([d]).draw();\n          })\n          .on('pointermove', function (event: PointerEvent) {\n            d3.select(this).dispatch('grid-hover', event);\n          })\n          .on('pointerout', function (event: PointerEvent, d: Data) {\n            that.pointerout$.next(event);\n            if (!that.barConfig.showTooltip) return;\n            that.tooltipFactory.clear();\n          });\n      };\n\n      // 多行提示框\n      const multiTooltip = (selection: d3.Selection<any, any, d3.BaseType, unknown>) => {\n        selection\n          .on('pointerover', function (event: PointerEvent, d: StackDataType) {\n            d3.select(this)\n              .transition()\n              .duration(useAnimation ? 500 : 0)\n              .ease(d3.easeCubicInOut)\n              .attr('r', 1.5);\n            const element = event.currentTarget as HTMLElement;\n            const tooltipDataArray: Data[] = [];\n            for (const key of Object.keys(d.data)) {\n              if (key !== 'stackKeyName') {\n                tooltipDataArray.push({ key: key, value: d.data[key] });\n              }\n            }\n            that.tooltipFactory.setConfig({ activeIndex: i });\n            const pointeroverData: PointeroverData = {\n              key: d.data['stackKeyName'],\n              activeIndex: i,\n              data: tooltipDataArray,\n              elements: [element],\n              event: event\n            };\n            that.pointerover$.next(pointeroverData);\n            if (!that.barConfig.showTooltip) return;\n            that.tooltipFactory.setElement(element).setColor(that.dataColorArray).setData(tooltipDataArray).draw();\n          })\n          .on('pointermove', function (event: PointerEvent) {\n            d3.select(this).dispatch('grid-hover', event);\n          })\n          .on('pointerout', function (event: PointerEvent, d: StackDataType) {\n            d3.select(this)\n              .transition()\n              .duration(useAnimation ? 500 : 0)\n              .attr('r', 1);\n            that.pointerout$.next(event);\n            if (!that.barConfig.showTooltip) return;\n            that.tooltipFactory.clear();\n          });\n      };\n      //#endregion\n\n      d3.select(this)\n        .selectAll('rect.bar')\n        .data(dataArray as any, (d: any) => d.key)\n        .join(\n          enter =>\n            enter\n              .append('rect')\n              .attr('class', 'bar')\n              .attr('id', (d, j) => `bar_${that.gridState.id}_${i}_${j}`)\n              .call(that.barConfig.isStack ? setStackBar : setParallelBar)\n              .call(that.barConfig.isStack ? multiTooltip : singleTooltip),\n          // .call(enterAnimation.bind(that))\n          update =>\n            update\n              .transition()\n              .duration(useAnimation ? 500 : 0)\n              .call(that.barConfig.isStack ? setStackBar : setParallelBar),\n          exit => exit.remove()\n        );\n    });\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.barArrayGroup\n      .selectAll('rect')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n\n    this.barArrayGroup\n      .selectAll('defs')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n\n  /** 判斷使用哪種動畫 */\n  private getAnimation(selection: d3.Selection<SVGPathElement, Data[], any, unknown>) {\n    switch (this.barConfig.enterAnimationType) {\n      case BarAnimationType.startToEnd:\n        return this.animateStartToEnd(selection);\n      case BarAnimationType.fadeIn:\n        return this.animateFadeIn(selection);\n      case BarAnimationType.none:\n      default:\n        return selection;\n    }\n  }\n\n  /** line 動畫 從頭畫到尾 */\n  private animateStartToEnd(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection\n      .attr('stroke-dasharray', function () {\n        return `${this.getTotalLength()} ${this.getTotalLength()}`;\n      })\n      .attr('stroke-dashoffset', function () {\n        return this.getTotalLength();\n      })\n      .call(selection => {\n        selection\n          .transition('animateStartToEnd')\n          .duration(500)\n          .attr('stroke-dashoffset', 0)\n          .on('end', function () {\n            d3.select(this).attr('stroke-dasharray', 'none');\n          });\n      });\n  }\n\n  /** line 動畫 淡入 */\n  private animateFadeIn(\n    selection: d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown>\n  ): d3.Selection<SVGPathElement, Data[], SVGGraphicsElement, unknown> {\n    return selection.attr('opacity', 0).call(selection => selection.transition().duration(1000).attr('opacity', 1));\n  }\n}\n\ninterface XValueOfBar {\n  stackKeyName: string;\n  [key: string]: any;\n}\n\ninterface StackDataType {\n  0: number;\n  1: number;\n  data: XValueOfBar;\n}\n\n/** BarFactory 的動畫種類 */\nexport enum BarAnimationType {\n  none = 0,\n  startToEnd = 1,\n  fadeIn = 2\n}\n","import { BarFactory } from '../../factory/grid/bar/bar-factory/bar-factory';\nimport { GridFactory } from '../../factory/grid/grid/grid-factory';\nimport { GridlineFactory } from '../../factory/grid/gridline/gridline-factory';\nimport { DataSetWithDataArray } from '../../interface/common.interface';\nimport { RootChart } from '../root-chart';\n\n/** 基礎長條圖 */\nexport class BarChart extends RootChart {\n  private gridFactory: GridFactory;\n  private gridlineFactory!: GridlineFactory;\n  private barFactory!: BarFactory;\n  private barDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private isUseGridlineFactory: boolean = true;\n  private isUseBarFactory: boolean = true;\n\n  constructor(selector: string) {\n    super(selector);\n    this.gridFactory = new GridFactory(this);\n    this.gridFactory.setBandwidth(0.5);\n    this.setFactory();\n  }\n\n  protected setFactory(): void {\n    this.gridlineFactory = this.gridlineFactory\n      ? this.gridlineFactory.setGridFactory(this.gridFactory)\n      : new GridlineFactory(this.gridFactory);\n\n    this.barFactory = this.barFactory\n      ? this.barFactory.setGridFactory(this.gridFactory)\n      : new BarFactory(this.gridFactory);\n  }\n\n  /** 設定資料 */\n  setDataSets(dataSets: DataSetWithDataArray[], isStack: boolean = false): BarChart {\n    this.barDataSetWithDataArray = dataSets;\n    const gridDataSetting = this.barDataSetWithDataArray.map((item) => {\n      return { dataSetWithDataArray: item, isStack: isStack };\n    });\n    this.gridFactory.setDataSetWithDataArrays(gridDataSetting);\n    this.barFactory.setDataSets(this.barDataSetWithDataArray);\n    this.barFactory.setStack(isStack);\n    return this;\n  }\n\n  /** 設定要使用的 GridFactory */\n  setGridFactory(gridFactory: GridFactory): BarChart {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定要使用的 GridlineFactory */\n  setGridlineFactory(gridlineFactory: GridlineFactory): BarChart {\n    this.gridlineFactory = gridlineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 BarFactory */\n  setBarFactory(barFactory: BarFactory): BarChart {\n    this.barFactory = barFactory;\n    return this;\n  }\n\n  getGridFactory(): GridFactory {\n    return this.gridFactory;\n  }\n\n  getGridlineFactory(): GridlineFactory {\n    return this.gridlineFactory;\n  }\n\n  getBarFactory(): BarFactory {\n    return this.barFactory;\n  }\n\n  drawChart(useAnimation: boolean = false) {\n    this.gridFactory.draw(useAnimation);\n    this.setFactory();\n\n    setTimeout(() => {\n      this.isUseGridlineFactory\n        ? this.gridlineFactory.draw(useAnimation)\n        : this.gridlineFactory.clear(useAnimation);\n\n      this.isUseBarFactory\n        ? this.barFactory.draw(useAnimation)\n        : this.barFactory.clear(useAnimation);\n    }, 0);\n  }\n}\n","import { BarFactory } from './../../factory/grid/bar/bar-factory/bar-factory';\nimport { GridFactory } from '../../factory/grid/grid/grid-factory';\nimport { DotFactory } from '../../factory/grid/line/dot-factory/dot-factory';\nimport { LineFactory } from '../../factory/grid/line/line-factory/line-factory';\nimport { DataSetWithDataArray } from '../../interface/common.interface';\nimport { RootChart } from '../root-chart';\nimport { GridlineFactory } from '../../factory/grid/gridline/gridline-factory';\n\nexport class BarLineChart extends RootChart {\n  private gridFactory: GridFactory;\n  private gridlineFactory!: GridlineFactory;\n  private lineFactory!: LineFactory;\n  private dotFactory!: DotFactory;\n  private barFactory!: BarFactory;\n\n  private lineDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private barDataSetWithDataArray: DataSetWithDataArray[] = [];\n  private lineAxisIndex: number = 0;\n  private barAxisIndex: number = 0;\n  private isUseGridlineFactory: boolean = true;\n  private isUseBarFactory: boolean = true;\n  private isUseLineFactory: boolean = true;\n  private isUseDotFactory: boolean = true;\n\n  constructor(selector: string) {\n    super(selector);\n    this.gridFactory = new GridFactory(this);\n    this.gridFactory.setBandwidth(0.5);\n    this.setFactory();\n  }\n\n  protected setFactory() {\n    this.gridlineFactory = this.gridlineFactory\n      ? this.gridlineFactory.setGridFactory(this.gridFactory)\n      : new GridlineFactory(this.gridFactory);\n\n    this.barFactory = this.barFactory\n      ? this.barFactory.setGridFactory(this.gridFactory)\n      : new BarFactory(this.gridFactory);\n    this.barFactory.setDataSets(this.barDataSetWithDataArray, this.barAxisIndex);\n\n    this.lineFactory = this.lineFactory\n      ? this.lineFactory.setGridFactory(this.gridFactory)\n      : new LineFactory(this.gridFactory);\n    this.lineFactory.setDataSets(\n      this.lineDataSetWithDataArray,\n      this.lineAxisIndex\n    );\n\n    this.dotFactory = this.dotFactory\n      ? this.dotFactory.setLineFactory(this.lineFactory)\n      : new DotFactory(this.lineFactory);\n  }\n\n  /** 設定折線資料\n   * @param dataSets DataSetWithDataArray[]\n   * @param axisIndex ? 第幾條 key 軸，預設為 1\n   */\n  setLineDataSets(\n    dataSets: DataSetWithDataArray[],\n    axisIndex: number = 1\n  ): BarLineChart {\n    this.lineDataSetWithDataArray = dataSets;\n    this.lineAxisIndex = axisIndex;\n    this.setGridDataSets();\n    return this;\n  }\n\n  /** 設定長條資料\n   * @param dataSets DataSetWithDataArray[]\n   * @param axisIndex ? 第幾條 key 軸，預設為 0\n   */\n  setBarDataSets(\n    dataSets: DataSetWithDataArray[],\n    axisIndex: number = 0\n  ): BarLineChart {\n    this.barDataSetWithDataArray = dataSets;\n    this.barAxisIndex = axisIndex;\n    this.setGridDataSets();\n    return this;\n  }\n\n  private setGridDataSets() {\n    const gridBarDataSetting = this.barDataSetWithDataArray.map((item) => {\n      return {\n        dataSetWithDataArray: item,\n        isStack: true,\n        axisIndex: this.barAxisIndex,\n      };\n    });\n    const gridLineDataSetting = this.lineDataSetWithDataArray.map((item) => {\n      return {\n        dataSetWithDataArray: item,\n        isStack: false,\n        axisIndex: this.lineAxisIndex,\n      };\n    });\n    this.gridFactory.setDataSetWithDataArrays([\n      ...gridBarDataSetting,\n      ...gridLineDataSetting,\n    ]);\n  }\n\n  /** 設定要使用的 GridFactory */\n  setGridFactory(gridFactory: GridFactory): BarLineChart {\n    this.gridFactory = gridFactory;\n    return this;\n  }\n\n  /** 設定要使用的 GridlineFactory */\n  setGridlineFactory(gridlineFactory: GridlineFactory): BarLineChart {\n    this.gridlineFactory = gridlineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 LineFactory */\n  setLineFactory(lineFactory: LineFactory): BarLineChart {\n    this.lineFactory = lineFactory;\n    return this;\n  }\n\n  /** 設定要使用的 BarFactory */\n  setBarFactory(barFactory: BarFactory): BarLineChart {\n    this.barFactory = barFactory;\n    return this;\n  }\n\n  getGridFactory(): GridFactory {\n    return this.gridFactory;\n  }\n\n  getGridlineFactory(): GridlineFactory {\n    return this.gridlineFactory;\n  }\n\n  getLineFactory(): LineFactory {\n    return this.lineFactory;\n  }\n\n  getDotFactory(): DotFactory {\n    return this.dotFactory;\n  }\n\n  getBarFactory(): BarFactory {\n    return this.barFactory;\n  }\n\n  useGridlineFactory(isUseGridlineFactory: boolean): BarLineChart {\n    this.isUseGridlineFactory = isUseGridlineFactory;\n    return this;\n  }\n\n  useBarFactory(isUseBarFactory: boolean): BarLineChart {\n    this.isUseBarFactory = isUseBarFactory;\n    return this;\n  }\n\n  useLineFactory(isUseLineFactory: boolean): BarLineChart {\n    this.isUseLineFactory = isUseLineFactory;\n    return this;\n  }\n\n  useDotFactory(isUseDotFactory: boolean): BarLineChart {\n    this.isUseDotFactory = isUseDotFactory;\n    return this;\n  }\n\n  drawChart(useAnimation: boolean = false) {\n    this.gridFactory.draw(useAnimation);\n    this.setFactory();\n\n    setTimeout(() => {\n      this.isUseGridlineFactory\n        ? this.gridlineFactory.draw(useAnimation)\n        : this.gridlineFactory.clear(useAnimation);\n\n      this.isUseBarFactory\n        ? this.barFactory.draw(useAnimation)\n        : this.barFactory.clear(useAnimation);\n\n      this.isUseLineFactory\n        ? this.lineFactory.draw(useAnimation)\n        : this.lineFactory.clear(useAnimation);\n\n      this.isUseDotFactory\n        ? this.dotFactory.draw(useAnimation)\n        : this.dotFactory.clear(useAnimation);\n    }, 0);\n  }\n}\n","\nexport interface LegnedConfig {\n  'font-size': string;\n  'font-weight': string;\n  'font-family': string;\n  'text-color': string;\n  'group-gap': string;\n  'padding': string;\n  'flex-direction': string;\n  'align-items': string;\n  'justify-content': string;\n}\n\nexport const DefaultLegendConfig: LegnedConfig = {\n  'font-size': '14px',\n  'font-weight': '400',\n  'font-family': '\"PingFang TC\",\"Segoe UI\", \"Roboto\", \"微軟正黑體\", \"sans-serif\"',\n  'text-color': '#333',\n  'group-gap': '16px',\n  'padding': '16px',\n  'flex-direction': 'row',\n  'align-items': 'center',\n  'justify-content': 'center',\n\n}\n","import * as d3 from 'd3';\nimport { RootChart } from '../../chart/root-chart';\nimport { Color } from '../../config/color.config';\nimport { getColorTypeArray, getCssColor } from '../../function/color.function';\nimport { deepCopy, getRandomId } from '../../function/common.function';\nimport { DataSet, DataSetWithDataArray } from '../../interface/common.interface';\nimport { BasicFactory } from '../basic-factory';\nimport { DefaultLegendConfig, LegnedConfig } from './legend.config';\n\nexport class LegendFactory extends BasicFactory<LegendFactory> {\n  private dataSets: DataSet[] = [];\n  private legendGroup: d3.Selection<d3.BaseType, unknown, HTMLElement, any>;\n  private legendConfig: LegnedConfig = deepCopy(DefaultLegendConfig);\n  private legendId: string = getRandomId();\n  private colorArray: Color[][] = [];\n\n  constructor(private input: RootChart | string) {\n    super();\n    if (typeof this.input !== 'string') {\n      this.legendGroup = this.input.svg.select('g.d3-legendGroup');\n    } else {\n      this.legendGroup = d3\n        .select(this.input)\n        .append('div')\n        .attr('class', 'd3-legendGroup')\n        .attr('id', `legendGroup_${this.legendId}`)\n        .style('display', 'flex')\n        .style('flex-direction', this.legendConfig['flex-direction'])\n        .style('align-items', this.legendConfig['align-items'])\n        .style('justify-content', this.legendConfig['justify-content'])\n        .style('gap', this.legendConfig['group-gap'])\n        .style('padding', this.legendConfig.padding) as any;\n    }\n  }\n\n  setDataSets(dataSetsArray: DataSetWithDataArray[][]): LegendFactory {\n    this.dataSets = dataSetsArray.flat();\n    this.colorArray = [];\n    for (const dataSets of dataSetsArray) {\n      const color = getColorTypeArray(dataSets);\n      const colorSubArray = color.slice(0, dataSets.length);\n      this.colorArray.push(...colorSubArray);\n    }\n    return this;\n  }\n\n  setConfig(legendConfig: Partial<LegnedConfig>): LegendFactory {\n    Object.assign(this.legendConfig, legendConfig);\n    return this;\n  }\n\n  getSelector(): string {\n    return `#legendGroup_${this.legendId}`;\n  }\n\n  getConfig(): LegnedConfig {\n    return this.legendConfig;\n  }\n\n  draw(useAnimation: boolean = false): void {\n    this.legendGroup\n      .style('display', 'flex')\n      .style('flex-direction', this.legendConfig['flex-direction'])\n      .style('align-items', this.legendConfig['align-items'])\n      .style('justify-content', this.legendConfig['justify-content'])\n      .style('gap', this.legendConfig['group-gap'])\n      .style('padding', this.legendConfig.padding) as any;\n\n    const that = this;\n    const appendIcon = function (selection: d3.Selection<any, any, any, any>) {\n      selection.each(function (d: DataSet, i) {\n        d3.select(this)\n          .append('div')\n          .attr('class', 'd3-legend-icon')\n          .attr('id', `legend_icon_${that.legendId}_${i}`)\n          .style('width', '20px')\n          .style('height', '6px')\n          .style('border-radius', '9999px')\n          .style('background', getCssColor(that.colorArray[i]));\n      });\n    };\n\n    const appendText = function (selection: d3.Selection<any, any, any, any>) {\n      selection.each(function (d: DataSet, i: number) {\n        d3.select(this)\n          .append('span')\n          .attr('class', 'd3-legend-text')\n          .attr('id', `legend_text_${that.legendId}_${i}`)\n          .style('font-size', that.legendConfig['font-size'])\n          .style('font-weight', that.legendConfig['font-weight'])\n          .style('font-family', that.legendConfig['font-family'])\n          .style('color', that.legendConfig['text-color'])\n          .style('user-select', 'none')\n          .text(d.label);\n      });\n    };\n\n    this.legendGroup\n      .selectAll('div.d3-legend')\n      .data(this.dataSets)\n      .join(\n        enter =>\n          enter\n            .append('div')\n            .attr('class', 'd3-legend')\n            .attr('id', (d, i) => `legend_${this.legendId}_${i}`)\n            .style('display', 'flex')\n            .style('align-items', 'center')\n            .style('gap', '4px')\n            .call(appendIcon)\n            .call(appendText),\n        update =>\n          update\n            .call(selection => selection.select('.d3-legend-icon').remove()) // Remove old icon\n            .call(selection => selection.select('.d3-legend-text').remove()) // Remove old text\n            .call(appendIcon) // Re-append updated icon\n            .call(appendText), // Re-append updated text,\n        exit =>\n          exit\n            .transition()\n            .duration(useAnimation ? 500 : 0)\n            .style('opacity', 0)\n            .remove()\n      );\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(): void {\n    this.legendGroup.selectAll().transition().duration(500).style('opacity', 0).remove();\n  }\n}\n","import { DefaultLabel, FontConfig } from \"../../../config/font.config\";\n\n\nexport enum LabelDispalyMode {\n  /** LabelOnly */\n  LabelOnly = 'labelOnly',\n  /** ValueOnly */\n  ValueOnly = 'valueOnly',\n  /** LabelValue */\n  LabelValue = 'labelValue'\n}\n\nexport interface RadialConfig {\n  /** 標籤與輻射圖之間的距離 */\n  labelOffset: number;\n  /** 標籤文字設定 */\n  labelFontConfig: FontConfig;\n  /** 標籤顯示模式 */\n  labelDispalyMode: LabelDispalyMode;\n}\n\nexport const DefaultRadialConfig: RadialConfig = {\n  labelOffset: 0,\n  labelFontConfig: DefaultLabel,\n  labelDispalyMode: LabelDispalyMode.LabelValue\n}\n\n","import { Size } from '../../../interface/common.interface';\n\n/** Radial Factory 中維護的資料，使用者不可設定 */\nexport interface RadialState {\n  /** 半徑 */\n  radius: number;\n  /** 標籤高度 */\n  labelSize: Size;\n}\n\nexport const DefaultRadialState: RadialState = {\n  radius: 20,\n  labelSize: { height: 0, width: 0 }\n};\n","import * as d3 from 'd3';\nimport { Observable, Subject } from 'rxjs';\nimport { RootSvg } from '../../../chart/root-svg';\nimport {\n  createText,\n  deepCopy,\n  getTextRect,\n} from '../../../function/common.function';\nimport { DataSetWithData } from '../../../interface/common.interface';\nimport { BasicFactory } from '../../basic-factory';\nimport { DefaultRadialConfig, RadialConfig } from './radial.config';\nimport { DefaultRadialState, RadialState } from './radial-state';\n\n/** 輻射定位組件，輻射中心型圖表必須使用 */\nexport class RadialFactory extends BasicFactory<RadialFactory> {\n  private radialGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private dataSetWithData: DataSetWithData[] = [];\n  private radialConfig: RadialConfig = deepCopy(DefaultRadialConfig);\n  private radialState: RadialState = deepCopy(DefaultRadialState);\n  private pointerover$: Subject<any> = new Subject();\n  private pointerout$: Subject<any> = new Subject();\n\n  constructor(private chart: RootSvg) {\n    super();\n    this.radialGroup = this.chart.svg\n      .select(`g#radialFactory_${this.factoryId}`)\n      .node()\n      ? this.chart.svg.select(`g#radialFactory_${this.chart.id}`)\n      : this.chart.svg\n          .append('g')\n          .attr('id', `radialFactory_${this.factoryId}`);\n\n    this.radialGroup.attr(\n      'transform',\n      `translate(${this.chart.size.width / 2},${this.chart.size.height / 2 + 5})` // 暫時補正5點，之後調整\n    );\n  }\n\n  setConfig(radialConfig: Partial<RadialConfig>): RadialFactory {\n    Object.assign(this.radialConfig, radialConfig);\n    return this;\n  }\n\n  setData(data: DataSetWithData[]): RadialFactory {\n    this.dataSetWithData = data;\n    return this;\n  }\n\n  getConfig(): RadialConfig {\n    return this.radialConfig;\n  }\n\n  getState(): RadialState {\n    return this.radialState;\n  }\n\n  getSelector(): string {\n    return `g#radialFactory_${this.factoryId}`;\n  }\n\n  /** 監聽 Pointerover 事件 */\n  onPointerover(): Observable<PointerEvent> {\n    return this.pointerover$.asObservable();\n  }\n\n  /** 監聽 Pointerout 事件 */\n  onPointerout(): Observable<PointerEvent> {\n    return this.pointerout$.asObservable();\n  }\n\n  draw(useAnimation: boolean = false): void {\n    // Sample data\n    const fontSize = this.radialConfig.labelFontConfig['font-size'];\n    const textHeight = getTextRect('q0p', undefined, fontSize).height; // 文字寬度\n    let maxWidthItem = null;\n    let maxWidth = 0;\n\n    for (const item of this.dataSetWithData) {\n      const text = (item.data.value || '').toString() + item.unitText || '';\n      const { width } = getTextRect(text, undefined, fontSize); // 只取寬度\n\n      if (width > maxWidth) {\n        maxWidth = width;\n        maxWidthItem = item;\n      }\n    }\n\n    // Define the radius of the pie chart\n    this.radialState.radius = Math.min(\n      this.chart.size.width / 2 - maxWidth - this.radialConfig.labelOffset,\n      this.chart.size.height / 2 - textHeight - this.radialConfig.labelOffset\n    );\n    this.radialState.labelSize = { height: textHeight, width: maxWidth };\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {}\n}\n","export interface PieConfig {\n  /** 甜甜圈寬度，數值介於 0~1，預設為1 */\n  donutWidthRatio: number\n}\n\nexport const DefaultPieConfig: PieConfig = {\n  donutWidthRatio: 1\n}\n","import * as d3 from 'd3';\nimport { Observable, Subject } from 'rxjs';\nimport { createText, deepCopy } from '../../../function/common.function';\nimport { DataSetWithData } from '../../../interface/common.interface';\nimport { BasicFactory } from '../../basic-factory';\nimport { BasicTooltipFactory } from '../../tooltip/basic-tooltip-factory';\nimport { TooltipFactory } from '../../tooltip/tooltip-factory';\nimport { DefaultPieConfig, PieConfig } from './pie.config';\nimport { RadialFactory } from '../radial/radial-factory';\nimport { RadialState } from '../radial/radial-state';\nimport { LabelDispalyMode, RadialConfig } from '../radial/radial.config';\n\n/** 雷達組件 */\nexport class PieFactory extends BasicFactory<PieFactory> {\n  private pieGroup: d3.Selection<any, unknown, HTMLElement, any>;\n  private radialState: RadialState;\n  private radialConfig: RadialConfig;\n  private dataSetWithData: DataSetWithData[] = [];\n  private pieConfig: PieConfig = deepCopy(DefaultPieConfig);\n  private pointerover$: Subject<any> = new Subject();\n  private pointerout$: Subject<any> = new Subject();\n\n  constructor(\n    radialFactory: RadialFactory,\n    private tooltipFactory: TooltipFactory<any> = new BasicTooltipFactory()\n  ) {\n    super();\n    this.radialState = radialFactory.getState();\n    this.radialConfig = radialFactory.getConfig();\n    this.pieGroup = d3.select(`g#pieFactory_${this.factoryId}`).node()\n      ? d3.select(`g#pieFactory_${this.factoryId}`)\n      : d3\n          .select(radialFactory.getSelector())\n          .append('g')\n          .attr('id', `pieFactory_${this.factoryId}`);\n    this.tooltipFactory.setPositionStrategy({ x: 'right', y: 'center' });\n  }\n\n  setConfig(pieConfig: Partial<PieConfig>): PieFactory {\n    Object.assign(this.pieConfig, pieConfig);\n    return this;\n  }\n\n  setRadialFactory(radialFactory: RadialFactory): PieFactory {\n    this.radialState = radialFactory.getState();\n    this.radialConfig = radialFactory.getConfig();\n    return this;\n  }\n\n  setData(data: DataSetWithData[]): PieFactory {\n    this.dataSetWithData = data;\n    return this;\n  }\n\n  getConfig(): PieConfig {\n    return this.pieConfig;\n  }\n\n  getSelector(): string {\n    return `g#pieFactory_${this.factoryId}`;\n  }\n\n  /** 監聽 Pointerover 事件 */\n  onPointerover(): Observable<PointerEvent> {\n    return this.pointerover$.asObservable();\n  }\n\n  /** 監聽 Pointerout 事件 */\n  onPointerout(): Observable<PointerEvent> {\n    return this.pointerout$.asObservable();\n  }\n\n  draw(useAnimation: boolean = false): void {\n    const pie = d3.pie<number>().sort(null);\n    const ratio = Math.min(Math.max(this.pieConfig.donutWidthRatio ?? 1, 0), 1);\n    const arc = d3\n      .arc<d3.PieArcDatum<number>>()\n      .outerRadius(this.radialState.radius)\n      .innerRadius(this.radialState.radius * (1 - ratio));\n\n    const labelArc = d3\n      .arc<d3.PieArcDatum<number>>()\n      .outerRadius(this.radialState.radius)\n      .innerRadius(this.radialState.radius);\n\n    const offset = this.radialConfig.labelOffset;\n    const data = this.dataSetWithData.map((d) => Number(d.data.value));\n    const pieData = pie(data);\n\n    // ----------- Pie slices -------------\n    const slices = this.pieGroup\n      .selectAll<SVGPathElement, d3.PieArcDatum<number>>('path.pie-slice')\n      .data(pieData);\n\n    slices\n      .join(\n        (enter) =>\n          enter\n            .append('path')\n            .attr('class', 'pie-slice')\n            .attr('d', arc)\n            .attr('fill', (d, i) => {\n              const colors = this.dataSetWithData?.[i]?.colors;\n              return colors?.[0] ?? d3.schemeCategory10[i % 10];\n            })\n            .style('opacity', 0),\n        (update) => update,\n        (exit) => exit.transition().duration(300).style('opacity', 0).remove()\n      )\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .attr('d', arc)\n      .style('opacity', 1);\n\n    // ----------- Labels -------------\n    const labels = this.pieGroup\n      .selectAll<SVGTextElement, d3.PieArcDatum<number>>('text.label')\n      .data(pieData);\n\n    labels\n      .join(\n        (enter) =>\n          enter.append('text').attr('class', 'label').style('opacity', 0),\n        (update) => update,\n        (exit) => exit.transition().duration(300).style('opacity', 0).remove()\n      )\n      .text((d, i) => {\n        const value = d.data.toString();\n        const prefix =\n          this.radialConfig.labelDispalyMode === LabelDispalyMode.LabelValue\n            ? this.dataSetWithData[i].label + ':'\n            : '';\n        return `${prefix} ${value} ${this.dataSetWithData[i].unitText || ''}`;\n      })\n      .attr('transform', (d) => `translate(${labelArc.centroid(d)})`)\n      .attr('dx', (d) => {\n        const angleRad = (d.startAngle + d.endAngle) / 2;\n        return Math.cos(angleRad - Math.PI / 2) * offset;\n      })\n      .attr('dy', (d) => {\n        const angleRad = (d.startAngle + d.endAngle) / 2;\n        const adjustedSin = Math.sin(angleRad - Math.PI / 2);\n        return (\n          adjustedSin * (offset + this.radialState.labelSize.height / 2) +\n          this.radialState.labelSize.height / 12\n        );\n      })\n      .style('text-anchor', (d) => {\n        const angleDeg = ((d.startAngle + d.endAngle) / 2) * (180 / Math.PI);\n        if (\n          (angleDeg >= -5 && angleDeg <= 5) ||\n          (angleDeg >= 175 && angleDeg <= 185)\n        ) {\n          return 'middle';\n        }\n        return angleDeg < 180 ? 'start' : 'end';\n      })\n      .style('font-size', this.radialConfig.labelFontConfig['font-size'])\n      .style('font-family', this.radialConfig.labelFontConfig['font-family'])\n      .style('font-weight', this.radialConfig.labelFontConfig['font-weight'])\n      .style('fill', this.radialConfig.labelFontConfig['color'])\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 1);\n\n    this.isFirstUpdate = false;\n  }\n\n  clear(useAnimation: boolean = false): void {\n    this.pieGroup\n      .selectAll('path.pie-slice')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n\n    this.pieGroup\n      .selectAll('text.label')\n      .transition()\n      .duration(useAnimation ? 500 : 0)\n      .style('opacity', 0)\n      .remove();\n  }\n}\n","// 圖表\nexport * from './lib/chart/root-svg';\nexport * from './lib/chart/root-chart';\nexport * from './lib/chart/line-chart/line-chart';\nexport * from './lib/chart/area-chart/area-chart';\nexport * from './lib/chart/bar-chart/bar-chart';\nexport * from './lib/chart/bar-line-chart/bar-line-chart';\n\n// 圖表附加功能\nexport * from './lib/factory/legend/legend-factory';\nexport * from './lib/factory/tooltip/basic-tooltip-factory';\nexport * from './lib/factory/tooltip/tooltip-factory';\n\n// 圖表組件\nexport * from './lib/factory/basic-factory';\nexport * from './lib/factory/grid/grid/grid-factory';\nexport * from './lib/factory/grid/gridline/gridline-factory';\nexport * from './lib/factory/grid/bar/bar-factory/bar-factory';\nexport * from './lib/factory/grid/line/line-factory/line-factory';\nexport * from './lib/factory/grid/line/dot-factory/dot-factory';\nexport * from './lib/factory/grid/line/area-factory/area-factory';\nexport * from './lib/factory/radial/radial/radial-factory';\nexport * from './lib/factory/radial/pie/pie-factory';\n\n// 共用\nexport * from './lib/interface/common.interface';\nexport * from './lib/interface/position.interface';\nexport * from './lib/enum/enum';\nexport * from './lib/enum/color.enum';\n\n// 設定檔\nexport * from './lib/config/color.config';\nexport * from './lib/config/font.config';\nexport * from './lib/factory/grid/grid/grid.config';\nexport * from './lib/factory/grid/gridline/gridline.config';\nexport * from './lib/factory/grid/bar/bar-factory/bar.config';\nexport * from './lib/factory/grid/line/line-factory/line.config';\nexport * from './lib/factory/grid/line/dot-factory/dot.config';\nexport * from './lib/factory/radial/radial/radial.config';\nexport * from './lib/factory/tooltip/tooltip.config';\nexport * from './lib/factory/legend/legend.config';\nexport * from './lib/factory/radial/radial/radial.config';\nexport * from './lib/factory/radial/pie/pie.config';\n\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}